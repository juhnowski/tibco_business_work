<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://www.tibco.com/namespaces/tnt/plugins/json" xmlns:pfx5="http://www.tibco.com/ns/no_namespace_schema_location/XSD Schemas/GetProcessInfo.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx4="http://www.tibco.com/ns/no_namespace_schema_location/XSD Schemas/ProcessInfo.xsd" xmlns:pfx3="http://www.tibco.com/ns/no_namespace_schema_location/XSD Schemas/Process.xsd" xmlns:pfx2="http://www.tibco.com/ns/no_namespace_schema_location/XSD Schemas/Response.xsd" xmlns:pfx="http://www.tibco.com/ns/no_namespace_schema_location/XSD Schemas/Contract.xsd" xmlns:pfx6="http://www.tibco.com/ns/no_namespace_schema_location/XSD Schemas/GetProcessInfoSchema.xsd">
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/XSD Schemas/Contract.xsd" schemaLocation="/XSD Schemas/Contract.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/XSD Schemas/Response.xsd" schemaLocation="/XSD Schemas/Response.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/XSD Schemas/Process.xsd" schemaLocation="/XSD Schemas/Process.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/XSD Schemas/ProcessInfo.xsd" schemaLocation="/XSD Schemas/ProcessInfo.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/XSD Schemas/GetProcessInfo.xsd" schemaLocation="/XSD Schemas/GetProcessInfo.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/XSD Schemas/GetProcessInfoSchema.xsd" schemaLocation="/XSD Schemas/GetProcessInfoSchema.xsd"/>
    <pd:name>Processes/Process/_GetProcessInfo.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="inputParams">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="inputJSON" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>136</pd:startX>
    <pd:startY>63</pd:startY>
    <pd:returnBindings>
        <responseJSON>
            <xsl:value-of select="if (count($Catch/exceptiondata)>0) then $Render-error-JSON/ns:ActivityOutputClass/jsonString  else $Render-JSON/ns:ActivityOutputClass/jsonString"/>
        </responseJSON>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="responseJSON" type="xsd:string"/>
    </pd:endType>
    <pd:endX>686</pd:endX>
    <pd:endY>64</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables>
        <ProcessManagementMock>
            <xsd:element name="response">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="ProcessInfo" type="pfx4:ProcessInfo" minOccurs="0" maxOccurs="unbounded"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </ProcessManagementMock>
    </pd:processVariables>
    <pd:targetNamespace>http://xmlns.example.com/1539134001199</pd:targetNamespace>
    <pd:activity name="Parse JSON">
        <pd:type>com.tibco.plugin.json.activities.JSONParserActivity</pd:type>
        <pd:resourceType>ae.activities.JSONParserActivity</pd:resourceType>
        <pd:x>269</pd:x>
        <pd:y>64</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <ValidateOutputEnable>true</ValidateOutputEnable>
            <ActivityOutputEditor ref="pfx6:request"/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInputClass>
                <jsonString>
                    <xsl:value-of select="$Start/inputParams/inputJSON"/>
                </jsonString>
            </ns:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Render JSON">
        <pd:type>com.tibco.plugin.json.activities.JSONRenderActivity</pd:type>
        <pd:resourceType>ae.activities.JSONRenderActivity</pd:resourceType>
        <pd:x>553</pd:x>
        <pd:y>64</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <removeRootElementForInput>true</removeRootElementForInput>
            <ActivityInputEditor ref="pfx6:response"/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInputClass>
                <response>
                    <Response>
                        <opResult>
                            <xsl:value-of select="0"/>
                        </opResult>
                        <ObjectId>
                            <xsl:value-of select="&quot;testObjectId&quot;"/>
                        </ObjectId>
                        <opErrorText>
                            <xsl:value-of select="&quot;testErrorText&quot;"/>
                        </opErrorText>
                    </Response>
                    <xsl:for-each select="$ProcessManagementMock/response/ProcessInfo">
                        <ProcessInfo>
                            <Id>
                                <xsl:value-of select="Id"/>
                            </Id>
                            <ProcessType>
                                <xsl:value-of select="ProcessType"/>
                            </ProcessType>
                            <ProductId>
                                <xsl:value-of select="ProductId"/>
                            </ProductId>
                            <ProductName>
                                <xsl:value-of select="ProductName"/>
                            </ProductName>
                            <StepId>
                                <xsl:value-of select="StepId"/>
                            </StepId>
                            <StepName>
                                <xsl:value-of select="StepName"/>
                            </StepName>
                            <CreateDate>
                                <xsl:value-of select="CreateDate"/>
                            </CreateDate>
                        </ProcessInfo>
                    </xsl:for-each>
                </response>
            </ns:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Process Management Stub">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>407</pd:x>
        <pd:y>72</pd:y>
        <config>
            <variableName>ProcessManagementMock</variableName>
        </config>
        <pd:inputBindings>
            <response>
                <ProcessInfo>
                    <Id>
                        <xsl:value-of select="&quot;processId#1&quot;"/>
                    </Id>
                    <ProcessType>
                        <xsl:value-of select="&quot;Test process#1 type&quot;"/>
                    </ProcessType>
                    <ProductId>
                        <xsl:value-of select="&quot;Test product#1 id&quot;"/>
                    </ProductId>
                    <ProductName>
                        <xsl:value-of select="&quot;Test product#1 name&quot;"/>
                    </ProductName>
                    <StepId>
                        <xsl:value-of select="&quot;stepId#1&quot;"/>
                    </StepId>
                    <StepName>
                        <xsl:value-of select="&quot;Test step#1 name&quot;"/>
                    </StepName>
                    <CreateDate>
                        <xsl:value-of select="&quot;2018-12-31T12:30:00&quot;"/>
                    </CreateDate>
                </ProcessInfo>
                <ProcessInfo>
                    <Id>
                        <xsl:value-of select="&quot;processId#2&quot;"/>
                    </Id>
                    <ProcessType>
                        <xsl:value-of select="&quot;Test process#2 type&quot;"/>
                    </ProcessType>
                    <ProductId>
                        <xsl:value-of select="&quot;Test product#2 id&quot;"/>
                    </ProductId>
                    <ProductName>
                        <xsl:value-of select="&quot;Test product#2 name&quot;"/>
                    </ProductName>
                    <StepId>
                        <xsl:value-of select="&quot;stepId#2&quot;"/>
                    </StepId>
                    <StepName>
                        <xsl:value-of select="&quot;Test step#2 name&quot;"/>
                    </StepName>
                    <CreateDate>
                        <xsl:value-of select="&quot;2018-12-31T22:15:00&quot;"/>
                    </CreateDate>
                </ProcessInfo>
            </response>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>556</pd:x>
        <pd:y>183</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Render error JSON">
        <pd:type>com.tibco.plugin.json.activities.JSONRenderActivity</pd:type>
        <pd:resourceType>ae.activities.JSONRenderActivity</pd:resourceType>
        <pd:x>689</pd:x>
        <pd:y>184</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <removeRootElementForInput>true</removeRootElementForInput>
            <ActivityInputEditor>
                <xsd:element name="inputParams">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="opResult" type="xsd:int"/>
                            <xsd:element name="opErrorText" type="xsd:string"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </ActivityInputEditor>
        </config>
        <pd:inputBindings>
            <ns:ActivityInputClass>
                <inputParams>
                    <opResult>
                        <xsl:value-of select="2"/>
                    </opResult>
                    <opErrorText>
                        <xsl:value-of select="$Catch/exceptiondata/*"/>
                    </opErrorText>
                </inputParams>
            </ns:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Parse JSON</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Render JSON</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse JSON</pd:from>
        <pd:to>Process Management Stub</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Process Management Stub</pd:from>
        <pd:to>Render JSON</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Render error JSON</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>Render error JSON</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>