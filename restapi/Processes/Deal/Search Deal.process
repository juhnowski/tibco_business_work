<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://www.tibco.com/namespaces/tnt/plugins/json" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <pd:name>Processes/Deal/Search Deal.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="inputParams">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="adLogin" type="xsd:string"/>
                    <xsd:element name="inputJSON" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>80</pd:startX>
    <pd:startY>74</pd:startY>
    <pd:returnBindings>
        <JSONoutput>
            <xsl:value-of select="if (count($Catch/exceptiondata)>0) then $Render-error-JSON/ns:ActivityOutputClass/jsonString  else $Render-JSON/ns:ActivityOutputClass/jsonString"/>
        </JSONoutput>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="JSONoutput" type="xsd:string"/>
    </pd:endType>
    <pd:endX>752</pd:endX>
    <pd:endY>178</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1521575913877</pd:targetNamespace>
    <pd:activity name="Deal Search">
        <pd:type>com.tibco.plugin.jdbc.JDBCCallActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCCallActivity</pd:resourceType>
        <pd:x>302</pd:x>
        <pd:y>179</pd:y>
        <config>
            <timeout>%%Timeout%%</timeout>
            <maxRows>1000000</maxRows>
            <emptyStrAsNil>true</emptyStrAsNil>
            <jdbcSharedConfig>/Connection/MSSQL Connection (SF).sharedjdbc</jdbcSharedConfig>
            <ProcedureName>Opportunity_GetList;1</ProcedureName>
            <useSchema>false</useSchema>
            <commit>false</commit>
            <schema>%%Schema%%</schema>
            <parameterTypes>
                <parameter>
                    <colName>@RETURN_VALUE</colName>
                    <colType>5</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
                <parameter>
                    <colName>@mainSearch</colName>
                    <colType>1</colType>
                    <dataType>12</dataType>
                    <typeName>varchar</typeName>
                </parameter>
                <parameter>
                    <colName>@byPeriod</colName>
                    <colType>1</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
                <parameter>
                    <colName>@byStatus</colName>
                    <colType>1</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
                <parameter>
                    <colName>@byType1</colName>
                    <colType>1</colType>
                    <dataType>12</dataType>
                    <typeName>varchar</typeName>
                </parameter>
                <parameter>
                    <colName>@byType2</colName>
                    <colType>1</colType>
                    <dataType>12</dataType>
                    <typeName>varchar</typeName>
                </parameter>
                <parameter>
                    <colName>@myDeal</colName>
                    <colType>1</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
                <parameter>
                    <colName>@byProjectStatus</colName>
                    <colType>1</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
                <parameter>
                    <colName>@productSearch</colName>
                    <colType>1</colType>
                    <dataType>12</dataType>
                    <typeName>varchar</typeName>
                </parameter>
                <parameter>
                    <colName>@adLogin</colName>
                    <colType>1</colType>
                    <dataType>12</dataType>
                    <typeName>varchar</typeName>
                </parameter>
                <parameter>
                    <colName>@pageSize</colName>
                    <colType>1</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
                <parameter>
                    <colName>@currentPage</colName>
                    <colType>1</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
                <parameter>
                    <colName>@totalRecords</colName>
                    <colType>2</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
                <parameter>
                    <colName>@totalPages</colName>
                    <colType>2</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
                <parameter>
                    <colName>@opResult</colName>
                    <colType>2</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
                <parameter>
                    <colName>@opErrorText</colName>
                    <colType>2</colType>
                    <dataType>12</dataType>
                    <typeName>varchar</typeName>
                </parameter>
            </parameterTypes>
        </config>
        <pd:inputBindings>
            <inputs>
                <inputSet>
                    <mainSearch>
                        <xsl:choose>
                            <xsl:when test="exists($Parse-JSON/ns:ActivityOutputClass/Client/mainSearch)">
                                <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/mainSearch"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </mainSearch>
                    <byPeriod>
                        <xsl:choose>
                            <xsl:when test="exists(if (string-length($Parse-JSON/ns:ActivityOutputClass/Client/byPeriod)&lt;1) then 0 else $Parse-JSON/ns:ActivityOutputClass/Client/byPeriod)">
                                <xsl:value-of select="if (string-length($Parse-JSON/ns:ActivityOutputClass/Client/byPeriod)&lt;1) then 0 else $Parse-JSON/ns:ActivityOutputClass/Client/byPeriod"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </byPeriod>
                    <byStatus>
                        <xsl:choose>
                            <xsl:when test="exists(if (string-length($Parse-JSON/ns:ActivityOutputClass/Client/byStatus)&lt;1) then 5 else $Parse-JSON/ns:ActivityOutputClass/Client/byStatus)">
                                <xsl:value-of select="if (string-length($Parse-JSON/ns:ActivityOutputClass/Client/byStatus)&lt;1) then 5 else $Parse-JSON/ns:ActivityOutputClass/Client/byStatus"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </byStatus>
                    <byType1>
                        <xsl:choose>
                            <xsl:when test="exists($Parse-JSON/ns:ActivityOutputClass/Client/byType1)">
                                <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/byType1"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </byType1>
                    <byType2>
                        <xsl:choose>
                            <xsl:when test="exists($Parse-JSON/ns:ActivityOutputClass/Client/byType2)">
                                <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/byType2"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </byType2>
                    <myDeal>
                        <xsl:choose>
                            <xsl:when test="exists(if (string-length($Parse-JSON/ns:ActivityOutputClass/Client/myDeal)&lt;1) then 0 else $Parse-JSON/ns:ActivityOutputClass/Client/myDeal)">
                                <xsl:value-of select="if (string-length($Parse-JSON/ns:ActivityOutputClass/Client/myDeal)&lt;1) then 0 else $Parse-JSON/ns:ActivityOutputClass/Client/myDeal"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </myDeal>
                    <byProjectStatus>
                        <xsl:choose>
                            <xsl:when test="exists(if (string-length($Parse-JSON/ns:ActivityOutputClass/Client/byProjectStatus)&lt;1) then 5 else $Parse-JSON/ns:ActivityOutputClass/Client/byProjectStatus)">
                                <xsl:value-of select="if (string-length($Parse-JSON/ns:ActivityOutputClass/Client/byProjectStatus)&lt;1) then 5 else $Parse-JSON/ns:ActivityOutputClass/Client/byProjectStatus"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </byProjectStatus>
                    <productSearch>
                        <xsl:choose>
                            <xsl:when test="exists($Parse-JSON/ns:ActivityOutputClass/Client/productSearch)">
                                <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/productSearch"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </productSearch>
                    <adLogin>
                        <xsl:value-of select="$Start/inputParams/adLogin"/>
                    </adLogin>
                    <pageSize>
                        <xsl:value-of select="if (string-length($Parse-JSON/ns:ActivityOutputClass/Client/pageSize)&lt;1) then 10 else $Parse-JSON/ns:ActivityOutputClass/Client/pageSize"/>
                    </pageSize>
                    <currentPage>
                        <xsl:value-of select="if (string-length($Parse-JSON/ns:ActivityOutputClass/Client/currentPage)&lt;1) then 1 else $Parse-JSON/ns:ActivityOutputClass/Client/currentPage"/>
                    </currentPage>
                    <totalRecords>
                        <xsl:value-of select="0"/>
                    </totalRecords>
                    <totalPages>
                        <xsl:value-of select="0"/>
                    </totalPages>
                    <opResult>
                        <xsl:value-of select="0"/>
                    </opResult>
                    <opErrorText>
                        <xsl:value-of select="0"/>
                    </opErrorText>
                </inputSet>
            </inputs>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Render JSON">
        <pd:type>com.tibco.plugin.json.activities.JSONRenderActivity</pd:type>
        <pd:resourceType>ae.activities.JSONRenderActivity</pd:resourceType>
        <pd:x>562</pd:x>
        <pd:y>178</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <removeRootElementForInput>true</removeRootElementForInput>
            <ActivityInputEditor>
                <xsd:element name="inputParams">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="currentPage" type="xsd:string"/>
                            <xsd:element name="pageSize" type="xsd:string"/>
                            <xsd:element name="lastPage" type="xsd:int"/>
                            <xsd:element name="lastRecord" type="xsd:long"/>
                            <xsd:element name="opResult" type="xsd:int"/>
                            <xsd:element name="opErrorText" type="xsd:string"/>
                            <xsd:element name="deals" minOccurs="0" maxOccurs="unbounded">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="id" type="xsd:int"/>
                                        <xsd:element name="clientID" type="xsd:long" minOccurs="0"/>
                                        <xsd:element name="clientName" type="xsd:string" minOccurs="0"/>
                                        <xsd:element name="oppStatus" type="xsd:string" minOccurs="0"/>
                                        <xsd:element name="productList" type="xsd:string" minOccurs="0"/>
                                        <xsd:element name="projectStatus" type="xsd:string" minOccurs="0"/>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </ActivityInputEditor>
        </config>
        <pd:inputBindings>
            <ns:ActivityInputClass>
                <inputParams>
                    <currentPage>
                        <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/currentPage"/>
                    </currentPage>
                    <pageSize>
                        <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/pageSize"/>
                    </pageSize>
                    <lastPage>
                        <xsl:value-of select="$Deal-Search/resultSet/outputSet/totalPages"/>
                    </lastPage>
                    <lastRecord>
                        <xsl:value-of select="$Deal-Search/resultSet/outputSet/totalRecords"/>
                    </lastRecord>
                    <opResult>
                        <xsl:value-of select="$Deal-Search/resultSet/outputSet/opResult"/>
                    </opResult>
                    <opErrorText>
                        <xsl:value-of select="$Deal-Search/resultSet/outputSet/opErrorText"/>
                    </opErrorText>
                    <xsl:for-each select="$Parse-XML/Resultsets/ResultSet1/Record1">
                        <deals>
                            <id>
                                <xsl:value-of select="ID"/>
                            </id>
                            <xsl:if test="ClientID">
                                <clientID>
                                    <xsl:value-of select="ClientID"/>
                                </clientID>
                            </xsl:if>
                            <clientName>
                                <xsl:value-of select="ClientName"/>
                            </clientName>
                            <xsl:if test="OppStatus">
                                <oppStatus>
                                    <xsl:value-of select="OppStatus"/>
                                </oppStatus>
                            </xsl:if>
                            <productList>
                                <xsl:value-of select="ProductList"/>
                            </productList>
                            <xsl:if test="ProjectStatus">
                                <projectStatus>
                                    <xsl:value-of select="ProjectStatus"/>
                                </projectStatus>
                            </xsl:if>
                        </deals>
                    </xsl:for-each>
                </inputParams>
            </ns:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse JSON">
        <pd:type>com.tibco.plugin.json.activities.JSONParserActivity</pd:type>
        <pd:resourceType>ae.activities.JSONParserActivity</pd:resourceType>
        <pd:x>84</pd:x>
        <pd:y>179</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <ActivityOutputEditor>
                <xsd:element name="Client">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="mainSearch" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="byPeriod" type="xsd:long" minOccurs="0"/>
                            <xsd:element name="byStatus" type="xsd:int" minOccurs="0"/>
                            <xsd:element name="byType1" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="byType2" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="myDeal" type="xsd:int" minOccurs="0"/>
                            <xsd:element name="byProjectStatus" type="xsd:int" minOccurs="0"/>
                            <xsd:element name="productSearch" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="pageSize" type="xsd:int"/>
                            <xsd:element name="currentPage" type="xsd:int"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </ActivityOutputEditor>
        </config>
        <pd:inputBindings>
            <ns:ActivityInputClass>
                <jsonString>
                    <xsl:value-of select="tib:hex-to-string($Start/inputParams/inputJSON)"/>
                </jsonString>
            </ns:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse XML">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>428</pd:x>
        <pd:y>179</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>false</validateOutput>
            <term>
                <xsd:element name="Resultsets">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="UpdateCount" type="xsd:int"/>
                            <xsd:element name="ResultSet1" maxOccurs="unbounded">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="Record1" maxOccurs="unbounded">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="ID" type="xsd:long"/>
                                                    <xsd:element name="ClientID" type="xsd:int" minOccurs="0"/>
                                                    <xsd:element name="ClientName" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="OppStatus" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="ProductList" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="ProjectStatus" type="xsd:string" minOccurs="0"/>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </term>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Deal-Search/resultSet/UnresolvedResultsets"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>495</pd:x>
        <pd:y>286</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Render error JSON">
        <pd:type>com.tibco.plugin.json.activities.JSONRenderActivity</pd:type>
        <pd:resourceType>ae.activities.JSONRenderActivity</pd:resourceType>
        <pd:x>692</pd:x>
        <pd:y>285</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <removeRootElementForInput>true</removeRootElementForInput>
            <ActivityInputEditor>
                <xsd:element name="inputParams">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="opResult" type="xsd:int"/>
                            <xsd:element name="opErrorText" type="xsd:string"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </ActivityInputEditor>
        </config>
        <pd:inputBindings>
            <ns:ActivityInputClass>
                <inputParams>
                    <opResult>
                        <xsl:value-of select="2"/>
                    </opResult>
                    <opErrorText>
                        <xsl:value-of select="$Catch/exceptiondata/*"/>
                    </opErrorText>
                </inputParams>
            </ns:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SQL Direct">
        <pd:type>com.tibco.plugin.jdbc.JDBCGeneralActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCGeneralActivity</pd:resourceType>
        <pd:x>193</pd:x>
        <pd:y>180</pd:y>
        <config>
            <timeout>%%Timeout%%</timeout>
            <commit>false</commit>
            <maxRows>100</maxRows>
            <jdbcSharedConfig>/Connection/MSSQL Connection (SF).sharedjdbc</jdbcSharedConfig>
        </config>
        <pd:inputBindings>
            <jdbcGeneralActivityInput>
                <statement>
                    <xsl:value-of select="'SET ARITHABORT ON'"/>
                </statement>
            </jdbcGeneralActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Parse JSON</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Render JSON</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>Render JSON</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>Render error JSON</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Render error JSON</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse JSON</pd:from>
        <pd:to>SQL Direct</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SQL Direct</pd:from>
        <pd:to>Deal Search</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Deal Search</pd:from>
        <pd:to>Parse XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>