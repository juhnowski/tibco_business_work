<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://www.tibco.com/namespaces/tnt/plugins/json" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <pd:name>Processes/Deal/Get Extended Deal.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="input">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="dealId" type="xsd:long"/>
                    <xsd:element name="adLogin" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>55</pd:startX>
    <pd:startY>91</pd:startY>
    <pd:returnBindings>
        <JSONoutput>
            <xsl:value-of select="if (count($Catch/exceptiondata)>0) then $Render-error-JSON/ns:ActivityOutputClass/jsonString  else $Render-JSON/ns:ActivityOutputClass/jsonString"/>
        </JSONoutput>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="JSONoutput" type="xsd:string"/>
    </pd:endType>
    <pd:endX>904</pd:endX>
    <pd:endY>92</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1531295237152</pd:targetNamespace>
    <pd:activity name="Render JSON">
        <pd:type>com.tibco.plugin.json.activities.JSONRenderActivity</pd:type>
        <pd:resourceType>ae.activities.JSONRenderActivity</pd:resourceType>
        <pd:x>801</pd:x>
        <pd:y>92</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <removeRootElementForInput>true</removeRootElementForInput>
            <ActivityInputEditor>
                <xsd:element name="Deal">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="id" type="xsd:long"/>
                            <xsd:element name="type1" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="type2" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="priority" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="saleProc" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="saleStep" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="status" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="clientID" type="xsd:long" minOccurs="0"/>
                            <xsd:element name="clientName" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="clientINN" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="seller" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="contractID" type="xsd:long" minOccurs="0"/>
                            <xsd:element name="contractNumber" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="scalaID" type="xsd:long" minOccurs="0"/>
                            <xsd:element name="scalaNumber" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="contractType" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="contractAM" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="contractSignDate" type="xsd:dateTime" minOccurs="0"/>
                            <xsd:element name="projectNumber" type="xsd:long" minOccurs="0"/>
                            <xsd:element name="projectComment" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="projectContactID" type="xsd:long" minOccurs="0"/>
                            <xsd:element name="projectStatus" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="proccessStepObjID" type="xsd:long" minOccurs="0"/>
                            <xsd:element name="proccessStep" type="xsd:int" minOccurs="0"/>
                            <xsd:element name="editable" type="xsd:int" minOccurs="0"/>
                            <xsd:element name="plannedFinishDate" type="xsd:dateTime" minOccurs="0"/>
                            <xsd:element name="productBOReleased" type="xsd:int" minOccurs="0"/>
                            <xsd:element name="products" minOccurs="0" maxOccurs="unbounded">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="productInstanceId" type="xsd:long"/>
                                        <xsd:element name="opportunityID" type="xsd:long"/>
                                        <xsd:element name="addressID" type="xsd:long" minOccurs="0"/>
                                        <xsd:element name="productID" type="xsd:long"/>
                                        <xsd:element name="prodStringId" type="xsd:long"/>
                                        <xsd:element name="name" type="xsd:string" minOccurs="0"/>
                                        <xsd:element name="code" type="xsd:string" minOccurs="0"/>
                                        <xsd:element name="billing" type="xsd:string" minOccurs="0"/>
                                        <xsd:element name="businessCenterID" type="xsd:long" minOccurs="0"/>
                                        <xsd:element name="commissionSchemeID" type="xsd:long" minOccurs="0"/>
                                        <xsd:element name="consumerID" type="xsd:long" minOccurs="0"/>
                                        <xsd:element name="bOComment" type="xsd:string" minOccurs="0"/>
                                        <xsd:element name="separateInstallInvoice" type="xsd:int" minOccurs="0"/>
                                        <xsd:element name="addressName" type="xsd:string" minOccurs="0"/>
                                        <xsd:element name="businessCenterName" type="xsd:string" minOccurs="0"/>
                                        <xsd:element name="commissionSchemeName" type="xsd:string" minOccurs="0"/>
                                        <xsd:element name="consumerName" type="xsd:string" minOccurs="0"/>
                                        <xsd:element name="services" minOccurs="0" maxOccurs="unbounded">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="serviceInstanceId" type="xsd:long"/>
                                                    <xsd:element name="serviceInstanceStringID" type="xsd:string"/>
                                                    <xsd:element name="productInstanceID" type="xsd:long"/>
                                                    <xsd:element name="opportunityID" type="xsd:long"/>
                                                    <xsd:element name="addressАID" type="xsd:long" minOccurs="0"/>
                                                    <xsd:element name="addressAName" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="billingID" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="addressBID" type="xsd:long" minOccurs="0"/>
                                                    <xsd:element name="addressBName" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="catalogProductID" type="xsd:long" minOccurs="0"/>
                                                    <xsd:element name="catalogProductServiceID" type="xsd:long" minOccurs="0"/>
                                                    <xsd:element name="name" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="actionDate" type="xsd:dateTime" minOccurs="0"/>
                                                    <xsd:element name="actionType" type="xsd:int" minOccurs="0"/>
                                                    <xsd:element name="priceOneTimeFixed" type="xsd:double" minOccurs="0"/>
                                                    <xsd:element name="priceRecurrentFixed" type="xsd:double" minOccurs="0"/>
                                                    <xsd:element name="amountOneTimeFixed" type="xsd:double" minOccurs="0"/>
                                                    <xsd:element name="amountRecurrentFixed" type="xsd:double" minOccurs="0"/>
                                                    <xsd:element name="priceOneTimeDiscount" type="xsd:int" minOccurs="0"/>
                                                    <xsd:element name="priceRecurrentDiscount" type="xsd:int" minOccurs="0"/>
                                                    <xsd:element name="docNumForDiscount" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="productId" type="xsd:long" minOccurs="0"/>
                                                    <xsd:element name="comment" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="required" type="xsd:int" minOccurs="0"/>
                                                    <xsd:element name="hasOneTimePayment" type="xsd:int" minOccurs="0"/>
                                                    <xsd:element name="hasRecurrentPayment" type="xsd:int" minOccurs="0"/>
                                                    <xsd:element name="instAddressQuantity" type="xsd:int" minOccurs="0"/>
                                                    <xsd:element name="maxInstanceNumber" type="xsd:int" minOccurs="0"/>
                                                    <xsd:element name="poCreation" type="xsd:int" minOccurs="0"/>
                                                    <xsd:element name="comments" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="businessCenterID" type="xsd:long" minOccurs="0"/>
                                                    <xsd:element name="commissionSchemeID" type="xsd:long" minOccurs="0"/>
                                                    <xsd:element name="businessCenterName" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="commissionSchemeName" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="params" minOccurs="0" maxOccurs="unbounded">
                                                        <xsd:complexType>
                                                            <xsd:sequence>
                                                                <xsd:element name="paramInstanceId" type="xsd:string"/>
                                                                <xsd:element name="productServiceId" type="xsd:long"/>
                                                                <xsd:element name="serviceInstanceId" type="xsd:long"/>
                                                                <xsd:element name="productInstanceId" type="xsd:long"/>
                                                                <xsd:element name="opportunityID" type="xsd:long" minOccurs="0"/>
                                                                <xsd:element name="paramValue" type="xsd:string" minOccurs="0"/>
                                                                <xsd:element name="paramType" type="xsd:long" minOccurs="0"/>
                                                                <xsd:element name="required" type="xsd:int"/>
                                                                <xsd:element name="valueChoiceID" type="xsd:string" minOccurs="0"/>
                                                            </xsd:sequence>
                                                        </xsd:complexType>
                                                    </xsd:element>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </ActivityInputEditor>
        </config>
        <pd:inputBindings>
            <ns:ActivityInputClass>
                <Deal>
                    <id>
                        <xsl:value-of select="$Parse-Deal-XML/Resultsets/ResultSet1/Record1/ID"/>
                    </id>
                    <type1>
                        <xsl:value-of select="$Parse-Deal-XML/Resultsets/ResultSet1/Record1/Type1"/>
                    </type1>
                    <type2>
                        <xsl:value-of select="$Parse-Deal-XML/Resultsets/ResultSet1/Record1/Type2"/>
                    </type2>
                    <priority>
                        <xsl:value-of select="$Parse-Deal-XML/Resultsets/ResultSet1/Record1/Priority"/>
                    </priority>
                    <saleProc>
                        <xsl:value-of select="$Parse-Deal-XML/Resultsets/ResultSet1/Record1/SaleProc"/>
                    </saleProc>
                    <saleStep>
                        <xsl:value-of select="$Parse-Deal-XML/Resultsets/ResultSet1/Record1/SaleStep"/>
                    </saleStep>
                    <status>
                        <xsl:value-of select="$Parse-Deal-XML/Resultsets/ResultSet1/Record1/Status"/>
                    </status>
                    <clientID>
                        <xsl:value-of select="$Parse-Deal-XML/Resultsets/ResultSet1/Record1/ClientID"/>
                    </clientID>
                    <clientName>
                        <xsl:value-of select="$Parse-Deal-XML/Resultsets/ResultSet1/Record1/ClientName"/>
                    </clientName>
                    <clientINN>
                        <xsl:value-of select="$Parse-Deal-XML/Resultsets/ResultSet1/Record1/ClientINN"/>
                    </clientINN>
                    <seller>
                        <xsl:value-of select="$Parse-Deal-XML/Resultsets/ResultSet1/Record1/Seller"/>
                    </seller>
                    <contractID>
                        <xsl:value-of select="$Parse-Deal-XML/Resultsets/ResultSet1/Record1/ContractID"/>
                    </contractID>
                    <contractNumber>
                        <xsl:value-of select="$Parse-Deal-XML/Resultsets/ResultSet1/Record1/ContractNumber"/>
                    </contractNumber>
                    <scalaID>
                        <xsl:value-of select="$Parse-Deal-XML/Resultsets/ResultSet1/Record1/ScalaID"/>
                    </scalaID>
                    <scalaNumber>
                        <xsl:value-of select="$Parse-Deal-XML/Resultsets/ResultSet1/Record1/ScalaNumber"/>
                    </scalaNumber>
                    <contractType>
                        <xsl:value-of select="$Parse-Deal-XML/Resultsets/ResultSet1/Record1/ContractType"/>
                    </contractType>
                    <contractAM>
                        <xsl:value-of select="$Parse-Deal-XML/Resultsets/ResultSet1/Record1/ContractAM"/>
                    </contractAM>
                    <contractSignDate>
                        <xsl:value-of select="$Parse-Deal-XML/Resultsets/ResultSet1/Record1/ContractSignDate"/>
                    </contractSignDate>
                    <projectNumber>
                        <xsl:value-of select="$Parse-Deal-XML/Resultsets/ResultSet1/Record1/ProjectNumber"/>
                    </projectNumber>
                    <projectComment>
                        <xsl:value-of select="$Parse-Deal-XML/Resultsets/ResultSet1/Record1/ProjectComment"/>
                    </projectComment>
                    <projectContactID>
                        <xsl:value-of select="$Parse-Deal-XML/Resultsets/ResultSet1/Record1/ProjectContactID"/>
                    </projectContactID>
                    <projectStatus>
                        <xsl:value-of select="$Parse-Deal-XML/Resultsets/ResultSet1/Record1/ProjectStatus"/>
                    </projectStatus>
                    <proccessStepObjID>
                        <xsl:value-of select="$Parse-Deal-XML/Resultsets/ResultSet1/Record1/ProccessStepObjID"/>
                    </proccessStepObjID>
                    <proccessStep>
                        <xsl:value-of select="$Parse-Deal-XML/Resultsets/ResultSet1/Record1/ProccessStep"/>
                    </proccessStep>
                    <editable>
                        <xsl:value-of select="$Parse-Deal-XML/Resultsets/ResultSet1/Record1/Editable"/>
                    </editable>
                    <plannedFinishDate>
                        <xsl:value-of select="$Parse-Deal-XML/Resultsets/ResultSet1/Record1/PlannedFinishDate"/>
                    </plannedFinishDate>
                    <productBOReleased>
                        <xsl:value-of select="$Parse-Deal-XML/Resultsets/ResultSet1/Record1/productBOReleased"/>
                    </productBOReleased>
                    <xsl:for-each select="$productInstances/AccumulatedOutput/ns:ActivityOutputClass/product">
                        <products>
                            <productInstanceId>
                                <xsl:value-of select="productInstanceId"/>
                            </productInstanceId>
                            <opportunityID>
                                <xsl:value-of select="opportunityID"/>
                            </opportunityID>
                            <xsl:if test="addressID">
                                <addressID>
                                    <xsl:value-of select="addressID"/>
                                </addressID>
                            </xsl:if>
                            <productID>
                                <xsl:value-of select="productID"/>
                            </productID>
                            <prodStringId>
                                <xsl:value-of select="prodStringId"/>
                            </prodStringId>
                            <xsl:if test="name">
                                <name>
                                    <xsl:value-of select="name"/>
                                </name>
                            </xsl:if>
                            <xsl:if test="code">
                                <code>
                                    <xsl:value-of select="code"/>
                                </code>
                            </xsl:if>
                            <xsl:if test="billing">
                                <billing>
                                    <xsl:value-of select="billing"/>
                                </billing>
                            </xsl:if>
                            <xsl:if test="businessCenterID">
                                <businessCenterID>
                                    <xsl:value-of select="businessCenterID"/>
                                </businessCenterID>
                            </xsl:if>
                            <xsl:if test="commissionSchemeID">
                                <commissionSchemeID>
                                    <xsl:value-of select="commissionSchemeID"/>
                                </commissionSchemeID>
                            </xsl:if>
                            <xsl:if test="consumerID">
                                <consumerID>
                                    <xsl:value-of select="consumerID"/>
                                </consumerID>
                            </xsl:if>
                            <xsl:if test="bOComment">
                                <bOComment>
                                    <xsl:value-of select="bOComment"/>
                                </bOComment>
                            </xsl:if>
                            <xsl:if test="separateInstallInvoice">
                                <separateInstallInvoice>
                                    <xsl:value-of select="separateInstallInvoice"/>
                                </separateInstallInvoice>
                            </xsl:if>
                            <xsl:if test="addressName">
                                <addressName>
                                    <xsl:value-of select="addressName"/>
                                </addressName>
                            </xsl:if>
                            <xsl:if test="businessCenterName">
                                <businessCenterName>
                                    <xsl:value-of select="businessCenterName"/>
                                </businessCenterName>
                            </xsl:if>
                            <xsl:if test="commissionSchemeName">
                                <commissionSchemeName>
                                    <xsl:value-of select="commissionSchemeName"/>
                                </commissionSchemeName>
                            </xsl:if>
                            <xsl:if test="consumerName">
                                <consumerName>
                                    <xsl:value-of select="consumerName"/>
                                </consumerName>
                            </xsl:if>
                            <xsl:for-each select="services">
                                <services>
                                    <serviceInstanceId>
                                        <xsl:value-of select="serviceInstanceId"/>
                                    </serviceInstanceId>
                                    <serviceInstanceStringID>
                                        <xsl:value-of select="serviceInstanceStringID"/>
                                    </serviceInstanceStringID>
                                    <productInstanceID>
                                        <xsl:value-of select="productInstanceID"/>
                                    </productInstanceID>
                                    <opportunityID>
                                        <xsl:value-of select="opportunityID"/>
                                    </opportunityID>
                                    <xsl:if test="addressАID">
                                        <addressАID>
                                            <xsl:value-of select="addressАID"/>
                                        </addressАID>
                                    </xsl:if>
                                    <xsl:if test="addressAName">
                                        <addressAName>
                                            <xsl:value-of select="addressAName"/>
                                        </addressAName>
                                    </xsl:if>
                                    <xsl:if test="billingID">
                                        <billingID>
                                            <xsl:value-of select="billingID"/>
                                        </billingID>
                                    </xsl:if>
                                    <xsl:if test="addressBID">
                                        <addressBID>
                                            <xsl:value-of select="addressBID"/>
                                        </addressBID>
                                    </xsl:if>
                                    <xsl:if test="addressBName">
                                        <addressBName>
                                            <xsl:value-of select="addressBName"/>
                                        </addressBName>
                                    </xsl:if>
                                    <xsl:if test="catalogProductID">
                                        <catalogProductID>
                                            <xsl:value-of select="catalogProductID"/>
                                        </catalogProductID>
                                    </xsl:if>
                                    <xsl:if test="catalogProductServiceID">
                                        <catalogProductServiceID>
                                            <xsl:value-of select="catalogProductServiceID"/>
                                        </catalogProductServiceID>
                                    </xsl:if>
                                    <xsl:if test="name">
                                        <name>
                                            <xsl:value-of select="name"/>
                                        </name>
                                    </xsl:if>
                                    <xsl:if test="actionDate">
                                        <actionDate>
                                            <xsl:value-of select="actionDate"/>
                                        </actionDate>
                                    </xsl:if>
                                    <xsl:if test="actionType">
                                        <actionType>
                                            <xsl:value-of select="actionType"/>
                                        </actionType>
                                    </xsl:if>
                                    <xsl:if test="priceOneTimeFixed">
                                        <priceOneTimeFixed>
                                            <xsl:value-of select="priceOneTimeFixed"/>
                                        </priceOneTimeFixed>
                                    </xsl:if>
                                    <xsl:if test="priceRecurrentFixed">
                                        <priceRecurrentFixed>
                                            <xsl:value-of select="priceRecurrentFixed"/>
                                        </priceRecurrentFixed>
                                    </xsl:if>
                                    <xsl:if test="amountOneTimeFixed">
                                        <amountOneTimeFixed>
                                            <xsl:value-of select="amountOneTimeFixed"/>
                                        </amountOneTimeFixed>
                                    </xsl:if>
                                    <xsl:if test="amountRecurrentFixed">
                                        <amountRecurrentFixed>
                                            <xsl:value-of select="amountRecurrentFixed"/>
                                        </amountRecurrentFixed>
                                    </xsl:if>
                                    <xsl:if test="priceOneTimeDiscount">
                                        <priceOneTimeDiscount>
                                            <xsl:value-of select="priceOneTimeDiscount"/>
                                        </priceOneTimeDiscount>
                                    </xsl:if>
                                    <xsl:if test="priceRecurrentDiscount">
                                        <priceRecurrentDiscount>
                                            <xsl:value-of select="priceRecurrentDiscount"/>
                                        </priceRecurrentDiscount>
                                    </xsl:if>
                                    <xsl:if test="docNumForDiscount">
                                        <docNumForDiscount>
                                            <xsl:value-of select="docNumForDiscount"/>
                                        </docNumForDiscount>
                                    </xsl:if>
                                    <xsl:if test="productId">
                                        <productId>
                                            <xsl:value-of select="productId"/>
                                        </productId>
                                    </xsl:if>
                                    <xsl:if test="comment">
                                        <comment>
                                            <xsl:value-of select="comment"/>
                                        </comment>
                                    </xsl:if>
                                    <xsl:if test="required">
                                        <required>
                                            <xsl:value-of select="required"/>
                                        </required>
                                    </xsl:if>
                                    <xsl:if test="hasOneTimePayment">
                                        <hasOneTimePayment>
                                            <xsl:value-of select="hasOneTimePayment"/>
                                        </hasOneTimePayment>
                                    </xsl:if>
                                    <xsl:if test="hasRecurrentPayment">
                                        <hasRecurrentPayment>
                                            <xsl:value-of select="hasRecurrentPayment"/>
                                        </hasRecurrentPayment>
                                    </xsl:if>
                                    <xsl:if test="instAddressQuantity">
                                        <instAddressQuantity>
                                            <xsl:value-of select="instAddressQuantity"/>
                                        </instAddressQuantity>
                                    </xsl:if>
                                    <xsl:if test="maxInstanceNumber">
                                        <maxInstanceNumber>
                                            <xsl:value-of select="maxInstanceNumber"/>
                                        </maxInstanceNumber>
                                    </xsl:if>
                                    <xsl:if test="poCreation">
                                        <poCreation>
                                            <xsl:value-of select="poCreation"/>
                                        </poCreation>
                                    </xsl:if>
                                    <xsl:if test="comments">
                                        <comments>
                                            <xsl:value-of select="comments"/>
                                        </comments>
                                    </xsl:if>
                                    <xsl:if test="businessCenterID">
                                        <businessCenterID>
                                            <xsl:value-of select="businessCenterID"/>
                                        </businessCenterID>
                                    </xsl:if>
                                    <xsl:if test="commissionSchemeID">
                                        <commissionSchemeID>
                                            <xsl:value-of select="commissionSchemeID"/>
                                        </commissionSchemeID>
                                    </xsl:if>
                                    <xsl:if test="businessCenterName">
                                        <businessCenterName>
                                            <xsl:value-of select="businessCenterName"/>
                                        </businessCenterName>
                                    </xsl:if>
                                    <xsl:if test="commissionSchemeName">
                                        <commissionSchemeName>
                                            <xsl:value-of select="commissionSchemeName"/>
                                        </commissionSchemeName>
                                    </xsl:if>
                                    <xsl:for-each select="params">
                                        <params>
                                            <paramInstanceId>
                                                <xsl:value-of select="paramInstanceId"/>
                                            </paramInstanceId>
                                            <productServiceId>
                                                <xsl:value-of select="productServiceId"/>
                                            </productServiceId>
                                            <serviceInstanceId>
                                                <xsl:value-of select="serviceInstanceId"/>
                                            </serviceInstanceId>
                                            <productInstanceId>
                                                <xsl:value-of select="productInstanceId"/>
                                            </productInstanceId>
                                            <xsl:if test="opportunityID">
                                                <opportunityID>
                                                    <xsl:value-of select="opportunityID"/>
                                                </opportunityID>
                                            </xsl:if>
                                            <xsl:if test="paramValue">
                                                <paramValue>
                                                    <xsl:value-of select="paramValue"/>
                                                </paramValue>
                                            </xsl:if>
                                            <xsl:if test="paramType">
                                                <paramType>
                                                    <xsl:value-of select="paramType"/>
                                                </paramType>
                                            </xsl:if>
                                            <required>
                                                <xsl:value-of select="required"/>
                                            </required>
                                            <xsl:if test="valueChoiceID">
                                                <valueChoiceID>
                                                    <xsl:value-of select="valueChoiceID"/>
                                                </valueChoiceID>
                                            </xsl:if>
                                        </params>
                                    </xsl:for-each>
                                </services>
                            </xsl:for-each>
                        </products>
                    </xsl:for-each>
                </Deal>
            </ns:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>801</pd:x>
        <pd:y>198</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Render error JSON">
        <pd:type>com.tibco.plugin.json.activities.JSONRenderActivity</pd:type>
        <pd:resourceType>ae.activities.JSONRenderActivity</pd:resourceType>
        <pd:x>901</pd:x>
        <pd:y>199</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <removeRootElementForInput>true</removeRootElementForInput>
            <ActivityInputEditor>
                <xsd:element name="inputParams">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="opResult" type="xsd:int"/>
                            <xsd:element name="opErrorText" type="xsd:string"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </ActivityInputEditor>
        </config>
        <pd:inputBindings>
            <ns:ActivityInputClass>
                <inputParams>
                    <opResult>
                        <xsl:value-of select="2"/>
                    </opResult>
                    <opErrorText>
                        <xsl:value-of select="$Catch/exceptiondata/*"/>
                    </opErrorText>
                </inputParams>
            </ns:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="Group">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>473</pd:x>
        <pd:y>2</pd:y>
        <pd:width>254</pd:width>
        <pd:height>162</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>inputLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:over>$Get-product-IDs/resultSet/Record</pd:over>
            <pd:indexSlot>i</pd:indexSlot>
            <pd:outSlot>productInstances</pd:outSlot>
            <pd:activityOutputName>Parse JSON</pd:activityOutputName>
            <pd:accumulateOutput>true</pd:accumulateOutput>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Get product instances</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Parse JSON</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Get product instances</pd:from>
            <pd:to>Parse JSON</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="Get product instances">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>547</pd:x>
            <pd:y>98</pd:y>
            <config>
                <processName>/Processes/Product Instance/Get Extended Product Instance.process</processName>
            </config>
            <pd:inputBindings>
                <id>
                    <xsl:value-of select="$Get-product-IDs/resultSet/Record[$i]/ID"/>
                </id>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Parse JSON">
            <pd:type>com.tibco.plugin.json.activities.JSONParserActivity</pd:type>
            <pd:resourceType>ae.activities.JSONParserActivity</pd:resourceType>
            <pd:x>646</pd:x>
            <pd:y>90</pd:y>
            <config>
                <SchemaType>xsdType</SchemaType>
                <BadgerfishCheck>false</BadgerfishCheck>
                <ActivityOutputEditor>
                    <xsd:element name="product">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="productInstanceId" type="xsd:long"/>
                                <xsd:element name="opportunityID" type="xsd:long"/>
                                <xsd:element name="addressID" type="xsd:long" minOccurs="0"/>
                                <xsd:element name="productID" type="xsd:long"/>
                                <xsd:element name="prodStringId" type="xsd:long"/>
                                <xsd:element name="name" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="code" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="billing" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="businessCenterID" type="xsd:long" minOccurs="0"/>
                                <xsd:element name="commissionSchemeID" type="xsd:long" minOccurs="0"/>
                                <xsd:element name="consumerID" type="xsd:long" minOccurs="0"/>
                                <xsd:element name="bOComment" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="separateInstallInvoice" type="xsd:int" minOccurs="0"/>
                                <xsd:element name="consumerName" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="commissionSchemeName" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="businessCenterName" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="addressName" type="xsd:string"/>
                                <xsd:element name="services" minOccurs="0" maxOccurs="unbounded">
                                    <xsd:complexType>
                                        <xsd:sequence>
                                            <xsd:element name="serviceInstanceId" type="xsd:long"/>
                                            <xsd:element name="serviceInstanceStringID" type="xsd:string"/>
                                            <xsd:element name="productInstanceID" type="xsd:long"/>
                                            <xsd:element name="opportunityID" type="xsd:long"/>
                                            <xsd:element name="addressАID" type="xsd:long" minOccurs="0"/>
                                            <xsd:element name="addressBID" type="xsd:long" minOccurs="0"/>
                                            <xsd:element name="billingID" type="xsd:string" minOccurs="0"/>
                                            <xsd:element name="catalogProductID" type="xsd:long" minOccurs="0"/>
                                            <xsd:element name="catalogProductServiceID" type="xsd:long" minOccurs="0"/>
                                            <xsd:element name="name" type="xsd:string" minOccurs="0"/>
                                            <xsd:element name="actionDate" type="xsd:dateTime" minOccurs="0"/>
                                            <xsd:element name="actionType" type="xsd:int" minOccurs="0"/>
                                            <xsd:element name="priceOneTimeFixed" type="xsd:double" minOccurs="0"/>
                                            <xsd:element name="priceRecurrentFixed" type="xsd:double" minOccurs="0"/>
                                            <xsd:element name="amountOneTimeFixed" type="xsd:double" minOccurs="0"/>
                                            <xsd:element name="amountRecurrentFixed" type="xsd:double" minOccurs="0"/>
                                            <xsd:element name="priceOneTimeDiscount" type="xsd:int" minOccurs="0"/>
                                            <xsd:element name="priceRecurrentDiscount" type="xsd:int" minOccurs="0"/>
                                            <xsd:element name="docNumForDiscount" type="xsd:string" minOccurs="0"/>
                                            <xsd:element name="productId" type="xsd:long" minOccurs="0"/>
                                            <xsd:element name="comment" type="xsd:string" minOccurs="0"/>
                                            <xsd:element name="required" type="xsd:int" minOccurs="0"/>
                                            <xsd:element name="hasOneTimePayment" type="xsd:int" minOccurs="0"/>
                                            <xsd:element name="hasRecurrentPayment" type="xsd:int" minOccurs="0"/>
                                            <xsd:element name="instAddressQuantity" type="xsd:int" minOccurs="0"/>
                                            <xsd:element name="maxInstanceNumber" type="xsd:int" minOccurs="0"/>
                                            <xsd:element name="poCreation" type="xsd:int" minOccurs="0"/>
                                            <xsd:element name="businessCenterID" type="xsd:long" minOccurs="0"/>
                                            <xsd:element name="commissionSchemeID" type="xsd:long" minOccurs="0"/>
                                            <xsd:element name="note" type="xsd:long" minOccurs="0"/>
                                            <xsd:element name="comments" type="xsd:string" minOccurs="0"/>
                                            <xsd:element name="commissionSchemeName" type="xsd:string" minOccurs="0"/>
                                            <xsd:element name="businessCenterName" type="xsd:string" minOccurs="0"/>
                                            <xsd:element name="addressAName" type="xsd:string" minOccurs="0"/>
                                            <xsd:element name="addressBName" type="xsd:string" minOccurs="0"/>
                                            <xsd:element name="params" minOccurs="0" maxOccurs="unbounded">
                                                <xsd:complexType>
                                                    <xsd:sequence>
                                                        <xsd:element name="paramInstanceId" type="xsd:string"/>
                                                        <xsd:element name="productServiceId" type="xsd:long"/>
                                                        <xsd:element name="serviceInstanceId" type="xsd:long"/>
                                                        <xsd:element name="productInstanceId" type="xsd:long"/>
                                                        <xsd:element name="opportunityID" type="xsd:long" minOccurs="0"/>
                                                        <xsd:element name="paramValue" type="xsd:string" minOccurs="0"/>
                                                        <xsd:element name="paramType" type="xsd:long" minOccurs="0"/>
                                                        <xsd:element name="required" type="xsd:int"/>
                                                        <xsd:element name="valueChoiceID" type="xsd:string" minOccurs="0"/>
                                                    </xsd:sequence>
                                                </xsd:complexType>
                                            </xsd:element>
                                        </xsd:sequence>
                                    </xsd:complexType>
                                </xsd:element>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                </ActivityOutputEditor>
            </config>
            <pd:inputBindings>
                <ns:ActivityInputClass>
                    <jsonString>
                        <xsl:value-of select="$Get-product-instances/JSONoutput"/>
                    </jsonString>
                </ns:ActivityInputClass>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="Get product IDs">
        <pd:type>com.tibco.plugin.jdbc.JDBCQueryActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCQueryActivity</pd:resourceType>
        <pd:x>414</pd:x>
        <pd:y>91</pd:y>
        <config>
            <timeout>%%Timeout%%</timeout>
            <commit>false</commit>
            <maxRows>1000</maxRows>
            <emptyStrAsNil>false</emptyStrAsNil>
            <jdbcSharedConfig>/Connection/MSSQL Connection (SF).sharedjdbc</jdbcSharedConfig>
            <statement>select p.ID from %%Schema%%.v_OpportunityProduct p
where p.OpportunityID = ?</statement>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>DealID</parameterName>
                    <dataType>BIGINT</dataType>
                </parameter>
            </Prepared_Param_DataType>
            <oraObjects/>
            <oraTables/>
            <QueryOutputCachedSchemaColumns>ID</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>int</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
        </config>
        <pd:inputBindings>
            <jdbcQueryActivityInput>
                <DealID>
                    <xsl:value-of select="$Start/input/dealId"/>
                </DealID>
            </jdbcQueryActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Get deal">
        <pd:type>com.tibco.plugin.jdbc.JDBCCallActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCCallActivity</pd:resourceType>
        <pd:x>167</pd:x>
        <pd:y>91</pd:y>
        <config>
            <timeout>%%Timeout%%</timeout>
            <maxRows>1</maxRows>
            <emptyStrAsNil>false</emptyStrAsNil>
            <jdbcSharedConfig>/Connection/MSSQL Connection (SF).sharedjdbc</jdbcSharedConfig>
            <schema>%%Schema%%</schema>
            <catalog/>
            <ProcedureName>Opportunity_GetRecord;1</ProcedureName>
            <parameterTypes>
                <parameter>
                    <colName>@RETURN_VALUE</colName>
                    <colType>5</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
                <parameter>
                    <colName>@ID</colName>
                    <colType>1</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
                <parameter>
                    <colName>@adLogin</colName>
                    <colType>1</colType>
                    <dataType>12</dataType>
                    <typeName>varchar</typeName>
                </parameter>
                <parameter>
                    <colName>@opResult</colName>
                    <colType>2</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
                <parameter>
                    <colName>@opErrorText</colName>
                    <colType>2</colType>
                    <dataType>12</dataType>
                    <typeName>varchar</typeName>
                </parameter>
            </parameterTypes>
        </config>
        <pd:inputBindings>
            <inputs>
                <inputSet>
                    <ID>
                        <xsl:value-of select="$Start/input/dealId"/>
                    </ID>
                    <adLogin>
                        <xsl:value-of select="$Start/input/adLogin"/>
                    </adLogin>
                    <opResult>
                        <xsl:value-of select="0"/>
                    </opResult>
                    <opErrorText>
                        <xsl:value-of select="0"/>
                    </opErrorText>
                </inputSet>
            </inputs>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse Deal XML">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>271</pd:x>
        <pd:y>92</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>false</validateOutput>
            <term>
                <xsd:element name="Resultsets">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="ResultSet1">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="Record1">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="ID" type="xsd:long"/>
                                                    <xsd:element name="Type1" type="xsd:string"/>
                                                    <xsd:element name="Type2" type="xsd:string"/>
                                                    <xsd:element name="Priority" type="xsd:string"/>
                                                    <xsd:element name="SaleProc" type="xsd:string"/>
                                                    <xsd:element name="SaleStep" type="xsd:string"/>
                                                    <xsd:element name="Status" type="xsd:string"/>
                                                    <xsd:element name="ClientID" type="xsd:long"/>
                                                    <xsd:element name="ClientName" type="xsd:string"/>
                                                    <xsd:element name="ClientINN" type="xsd:string"/>
                                                    <xsd:element name="Seller" type="xsd:string"/>
                                                    <xsd:element name="ContractID" type="xsd:long"/>
                                                    <xsd:element name="ContractNumber" type="xsd:string"/>
                                                    <xsd:element name="ScalaID" type="xsd:long"/>
                                                    <xsd:element name="ScalaNumber" type="xsd:string"/>
                                                    <xsd:element name="ContractType" type="xsd:string"/>
                                                    <xsd:element name="ContractAM" type="xsd:string"/>
                                                    <xsd:element name="ContractSignDate" type="xsd:dateTime"/>
                                                    <xsd:element name="ProjectNumber" type="xsd:long"/>
                                                    <xsd:element name="ProjectComment" type="xsd:string"/>
                                                    <xsd:element name="ProjectContactID" type="xsd:int"/>
                                                    <xsd:element name="ProjectStatus" type="xsd:string"/>
                                                    <xsd:element name="ProccessStepObjID" type="xsd:int"/>
                                                    <xsd:element name="ProccessStep" type="xsd:int"/>
                                                    <xsd:element name="Editable" type="xsd:int"/>
                                                    <xsd:element name="PlannedFinishDate" type="xsd:dateTime"/>
                                                    <xsd:element name="productBOReleased" type="xsd:int"/>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </term>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Get-deal/resultSet/UnresolvedResultsets"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Render JSON</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>Render error JSON</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Render error JSON</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>Render JSON</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Get product IDs</pd:from>
        <pd:to>Group</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Get deal</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Get deal</pd:from>
        <pd:to>Parse Deal XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse Deal XML</pd:from>
        <pd:to>Get product IDs</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>