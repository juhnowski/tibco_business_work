<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:ns2="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://www.tibco.com/namespaces/tnt/plugins/json" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <pd:name>Processes/Contract/Update Contract Without Transaction.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="inputParams">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="adLogin" type="xsd:string"/>
                    <xsd:element name="inputJSON" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>53</pd:startX>
    <pd:startY>97</pd:startY>
    <pd:returnBindings>
        <JSONoutput>
            <xsl:value-of select="$Render-JSON/ns:ActivityOutputClass/jsonString"/>
        </JSONoutput>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="JSONoutput" type="xsd:string"/>
    </pd:endType>
    <pd:endX>1317</pd:endX>
    <pd:endY>98</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1521575913877</pd:targetNamespace>
    <pd:activity name="Render JSON">
        <pd:type>com.tibco.plugin.json.activities.JSONRenderActivity</pd:type>
        <pd:resourceType>ae.activities.JSONRenderActivity</pd:resourceType>
        <pd:x>1183</pd:x>
        <pd:y>99</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <removeRootElementForInput>true</removeRootElementForInput>
            <ActivityInputEditor>
                <xsd:element name="inputParams">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="recordId" type="xsd:long"/>
                            <xsd:element name="opResult" type="xsd:int"/>
                            <xsd:element name="opErrorText" type="xsd:string"/>
                            <xsd:element name="info" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </ActivityInputEditor>
        </config>
        <pd:inputBindings>
            <ns:ActivityInputClass>
                <inputParams>
                    <recordId>
                        <xsl:value-of select="if ($Parse-Contract-Card-XML/Resultsets/ResultSet1/Record1/UnderControl = 1) then $Contract-CreateUpdateDelete-1/resultSet/outputSet/recordId else $Contract-CreateUpdateDelete-3/resultSet/outputSet/recordId"/>
                    </recordId>
                    <opResult>
                        <xsl:value-of select="if ($Parse-Contract-Card-XML/Resultsets/ResultSet1/Record1/UnderControl = 1) then $Contract-CreateUpdateDelete-1/resultSet/outputSet/opResult else $Contract-CreateUpdateDelete-3/resultSet/outputSet/opResult"/>
                    </opResult>
                    <opErrorText>
                        <xsl:value-of select="if ($Parse-Contract-Card-XML/Resultsets/ResultSet1/Record1/UnderControl = 1) then $Contract-CreateUpdateDelete-1/resultSet/outputSet/opErrorText else $Contract-CreateUpdateDelete-3/resultSet/outputSet/opErrorText"/>
                    </opErrorText>
                    <info>
                        <xsl:value-of select="$Render-Info-JSON/ns:ActivityOutputClass/jsonString"/>
                    </info>
                </inputParams>
            </ns:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse JSON">
        <pd:type>com.tibco.plugin.json.activities.JSONParserActivity</pd:type>
        <pd:resourceType>ae.activities.JSONParserActivity</pd:resourceType>
        <pd:x>55</pd:x>
        <pd:y>218</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <ActivityOutputEditor>
                <xsd:element name="Client">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="clientID" type="xsd:long"/>
                            <xsd:element name="contractID" type="xsd:long"/>
                            <xsd:element name="contractParams" minOccurs="0">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="contractClientName" type="xsd:string"/>
                                        <xsd:element name="contractTypeSFId" type="xsd:long"/>
                                        <xsd:element name="breakDate" type="xsd:dateTime"/>
                                        <xsd:element name="breakCauseId" type="xsd:long"/>
                                        <xsd:element name="contactId" type="xsd:long"/>
                                        <xsd:element name="signedDate" type="xsd:dateTime"/>
                                        <xsd:element name="operLicenseId" type="xsd:long"/>
                                        <xsd:element name="joinLevelId" type="xsd:long"/>
                                        <xsd:element name="crossClientID" type="xsd:long"/>
                                        <xsd:element name="aBHId" type="xsd:long"/>
                                        <xsd:element name="contractInvoiceId" type="xsd:long"/>
                                        <xsd:element name="profitID" type="xsd:long"/>
                                        <xsd:element name="setFineId" type="xsd:long"/>
                                        <xsd:element name="fineTypeId" type="xsd:long"/>
                                        <xsd:element name="fine" type="xsd:string"/>
                                        <xsd:element name="penyRFRId" type="xsd:long"/>
                                        <xsd:element name="invoicePayPeriod" type="xsd:string"/>
                                        <xsd:element name="billingCycleCode" type="xsd:string"/>
                                        <xsd:element name="agreePrivateInfoId" type="xsd:long"/>
                                        <xsd:element name="bank" type="xsd:string"/>
                                        <xsd:element name="account" type="xsd:string"/>
                                        <xsd:element name="bik" type="xsd:string"/>
                                        <xsd:element name="corrAccount" type="xsd:string"/>
                                        <xsd:element name="kpp" type="xsd:string"/>
                                        <xsd:element name="dealPassport" type="xsd:string"/>
                                        <xsd:element name="fineWarrantNumber" type="xsd:string"/>
                                        <xsd:element name="dealBank" type="xsd:string"/>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </ActivityOutputEditor>
        </config>
        <pd:inputBindings>
            <ns:ActivityInputClass>
                <jsonString>
                    <xsl:value-of select="$Start/inputParams/inputJSON"/>
                </jsonString>
            </ns:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="Iterate">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>354</pd:x>
        <pd:y>439</pd:y>
        <pd:width>480</pd:width>
        <pd:height>170</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>inputLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:over>$Scalas/AccumulatedOutput/Resultsets/ResultSet1/Record1</pd:over>
            <pd:indexSlot>j</pd:indexSlot>
            <pd:outSlot>ScalaInfoOutput</pd:outSlot>
            <pd:activityOutputName>Parse Scala Info JSON</pd:activityOutputName>
            <pd:accumulateOutput>true</pd:accumulateOutput>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Render Scala Update JSON</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Parse Scala Info JSON</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Render Scala Update JSON</pd:from>
            <pd:to>Update scala</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Update scala</pd:from>
            <pd:to>Parse Scala Update JSON</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Parse Scala Update JSON</pd:from>
            <pd:to>Parse Scala Info JSON</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="Update scala">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>513</pd:x>
            <pd:y>533</pd:y>
            <config>
                <processName>/Processes/Scala/Update Scala Without Transaction.process</processName>
            </config>
            <pd:inputBindings>
                <inputParams>
                    <adLogin>
                        <xsl:value-of select="$Start/inputParams/adLogin"/>
                    </adLogin>
                    <inputJSON>
                        <xsl:value-of select="$Render-Scala-Update-JSON/ns:ActivityOutputClass/jsonString"/>
                    </inputJSON>
                </inputParams>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Render Scala Update JSON">
            <pd:type>com.tibco.plugin.json.activities.JSONRenderActivity</pd:type>
            <pd:resourceType>ae.activities.JSONRenderActivity</pd:resourceType>
            <pd:x>425</pd:x>
            <pd:y>539</pd:y>
            <config>
                <SchemaType>xsdType</SchemaType>
                <BadgerfishCheck>false</BadgerfishCheck>
                <removeRootElementForInput>true</removeRootElementForInput>
                <ActivityInputEditor>
                    <xsd:element name="input">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="contractID" type="xsd:long"/>
                                <xsd:element name="scalaNumber" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="scalaParams" minOccurs="0">
                                    <xsd:complexType>
                                        <xsd:sequence>
                                            <xsd:element name="nDSTariffId" type="xsd:int" minOccurs="0"/>
                                            <xsd:element name="billingCurrencyId" type="xsd:int" minOccurs="0"/>
                                            <xsd:element name="tariffsCurrencyId" type="xsd:int" minOccurs="0"/>
                                            <xsd:element name="agentCollectorId" type="xsd:int" minOccurs="0"/>
                                            <xsd:element name="pMNCode" type="xsd:string" minOccurs="0"/>
                                            <xsd:element name="clirInvFTPId" type="xsd:int" minOccurs="0"/>
                                            <xsd:element name="govContractId" type="xsd:string" minOccurs="0"/>
                                            <xsd:element name="oppCoopLVLTPId" type="xsd:int" minOccurs="0"/>
                                            <xsd:element name="closeDate" type="xsd:dateTime" minOccurs="0"/>
                                            <xsd:element name="breakCauseId" type="xsd:int" minOccurs="0"/>
                                            <xsd:element name="billingAddressId" type="xsd:int" minOccurs="0"/>
                                            <xsd:element name="billingContactId" type="xsd:int" minOccurs="0"/>
                                            <xsd:element name="invoicePrintId" type="xsd:int" minOccurs="0"/>
                                            <xsd:element name="invoiceSendToId" type="xsd:int" minOccurs="0"/>
                                            <xsd:element name="voiceTrafDetailsId" type="xsd:int" minOccurs="0"/>
                                            <xsd:element name="emailForDetails" type="xsd:string" minOccurs="0"/>
                                            <xsd:element name="invoiceDeliveryId" type="xsd:int" minOccurs="0"/>
                                            <xsd:element name="emailInvoiceDelivery" type="xsd:string" minOccurs="0"/>
                                            <xsd:element name="showDIDALexpandedId" type="xsd:int" minOccurs="0"/>
                                            <xsd:element name="uBGId" type="xsd:int" minOccurs="0"/>
                                            <xsd:element name="intDomID" type="xsd:string" minOccurs="0"/>
                                            <xsd:element name="billLanguageId" type="xsd:int" minOccurs="0"/>
                                            <xsd:element name="costBillingSystemId" type="xsd:int" minOccurs="0"/>
                                            <xsd:element name="revenueBillingSystemId" type="xsd:int" minOccurs="0"/>
                                            <xsd:element name="specifyConsumerId" type="xsd:int" minOccurs="0"/>
                                            <xsd:element name="sMSProjectNotif" type="xsd:int" minOccurs="0"/>
                                            <xsd:element name="ringUpPhone" type="xsd:string" minOccurs="0"/>
                                            <xsd:element name="ringUpEMail" type="xsd:string" minOccurs="0"/>
                                            <xsd:element name="digitalSignature" type="xsd:int" minOccurs="0"/>
                                            <xsd:element name="digitalSignatureDate" type="xsd:dateTime" minOccurs="0"/>
                                            <xsd:element name="digitalSignatureId" type="xsd:string" minOccurs="0"/>
                                            <xsd:element name="scalaNumberVKId" type="xsd:int" minOccurs="0"/>
                                            <xsd:element name="trafficTypeId" type="xsd:int" minOccurs="0"/>
                                        </xsd:sequence>
                                    </xsd:complexType>
                                </xsd:element>
                                <xsd:element name="recordId" type="xsd:long"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                </ActivityInputEditor>
            </config>
            <pd:inputBindings>
                <ns:ActivityInputClass>
                    <input>
                        <contractID>
                            <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractID"/>
                        </contractID>
                        <xsl:if test="$Scalas/AccumulatedOutput/Resultsets[$j]/ResultSet1/Record1/ScalaNumber">
                            <scalaNumber>
                                <xsl:value-of select="$Scalas/AccumulatedOutput/Resultsets[$j]/ResultSet1/Record1/ScalaNumber"/>
                            </scalaNumber>
                        </xsl:if>
                        <scalaParams>
                            <xsl:if test="$Scalas/AccumulatedOutput/Resultsets[$j]/ResultSet1/Record1/NDSTariffId">
                                <nDSTariffId>
                                    <xsl:value-of select="$Scalas/AccumulatedOutput/Resultsets[$j]/ResultSet1/Record1/NDSTariffId"/>
                                </nDSTariffId>
                            </xsl:if>
                            <xsl:if test="$Scalas/AccumulatedOutput/Resultsets[$j]/ResultSet1/Record1/BillingCurrencyId">
                                <billingCurrencyId>
                                    <xsl:value-of select="$Scalas/AccumulatedOutput/Resultsets[$j]/ResultSet1/Record1/BillingCurrencyId"/>
                                </billingCurrencyId>
                            </xsl:if>
                            <xsl:if test="$Scalas/AccumulatedOutput/Resultsets[$j]/ResultSet1/Record1/TariffsCurrencyId">
                                <tariffsCurrencyId>
                                    <xsl:value-of select="$Scalas/AccumulatedOutput/Resultsets[$j]/ResultSet1/Record1/TariffsCurrencyId"/>
                                </tariffsCurrencyId>
                            </xsl:if>
                            <xsl:if test="$Scalas/AccumulatedOutput/Resultsets[$j]/ResultSet1/Record1/AgentCollectorId">
                                <agentCollectorId>
                                    <xsl:value-of select="$Scalas/AccumulatedOutput/Resultsets[$j]/ResultSet1/Record1/AgentCollectorId"/>
                                </agentCollectorId>
                            </xsl:if>
                            <pMNCode>
                                <xsl:value-of select="$Scalas/AccumulatedOutput/Resultsets[$j]/ResultSet1/Record1/PMNCode"/>
                            </pMNCode>
                            <xsl:if test="$Scalas/AccumulatedOutput/Resultsets[$j]/ResultSet1/Record1/ClirInvFTPId">
                                <clirInvFTPId>
                                    <xsl:value-of select="$Scalas/AccumulatedOutput/Resultsets[$j]/ResultSet1/Record1/ClirInvFTPId"/>
                                </clirInvFTPId>
                            </xsl:if>
                            <govContractId>
                                <xsl:value-of select="$Scalas/AccumulatedOutput/Resultsets[$j]/ResultSet1/Record1/GovContractId"/>
                            </govContractId>
                            <oppCoopLVLTPId>
                                <xsl:value-of select="$Scalas/AccumulatedOutput/Resultsets[$j]/ResultSet1/Record1/OppCoopLVLTPId"/>
                            </oppCoopLVLTPId>
                            <closeDate>
                                <xsl:value-of select="$Scalas/AccumulatedOutput/Resultsets[$j]/ResultSet1/Record1/CloseDate"/>
                            </closeDate>
                            <breakCauseId>
                                <xsl:value-of select="$Scalas/AccumulatedOutput/Resultsets[$j]/ResultSet1/Record1/BreakCauseId"/>
                            </breakCauseId>
                            <billingAddressId>
                                <xsl:value-of select="$Scalas/AccumulatedOutput/Resultsets[$j]/ResultSet1/Record1/BillingAddressId"/>
                            </billingAddressId>
                            <billingContactId>
                                <xsl:value-of select="$Scalas/AccumulatedOutput/Resultsets[$j]/ResultSet1/Record1/BillingContactId"/>
                            </billingContactId>
                            <invoicePrintId>
                                <xsl:value-of select="$Scalas/AccumulatedOutput/Resultsets[$j]/ResultSet1/Record1/InvoicePrintId"/>
                            </invoicePrintId>
                            <invoiceSendToId>
                                <xsl:value-of select="$Scalas/AccumulatedOutput/Resultsets[$j]/ResultSet1/Record1/InvoiceSendToId"/>
                            </invoiceSendToId>
                            <voiceTrafDetailsId>
                                <xsl:value-of select="$Scalas/AccumulatedOutput/Resultsets[$j]/ResultSet1/Record1/VoiceTrafDetailsId"/>
                            </voiceTrafDetailsId>
                            <emailForDetails>
                                <xsl:value-of select="$Scalas/AccumulatedOutput/Resultsets[$j]/ResultSet1/Record1/EmailForDetails"/>
                            </emailForDetails>
                            <invoiceDeliveryId>
                                <xsl:value-of select="$Scalas/AccumulatedOutput/Resultsets[$j]/ResultSet1/Record1/InvoiceDeliveryId"/>
                            </invoiceDeliveryId>
                            <emailInvoiceDelivery>
                                <xsl:value-of select="$Scalas/AccumulatedOutput/Resultsets[$j]/ResultSet1/Record1/EmailInvoiceDelivery"/>
                            </emailInvoiceDelivery>
                            <showDIDALexpandedId>
                                <xsl:value-of select="$Scalas/AccumulatedOutput/Resultsets[$j]/ResultSet1/Record1/ShowDIDALexpandedId"/>
                            </showDIDALexpandedId>
                            <uBGId>
                                <xsl:value-of select="$Scalas/AccumulatedOutput/Resultsets[$j]/ResultSet1/Record1/UBGId"/>
                            </uBGId>
                            <intDomID>
                                <xsl:value-of select="$Scalas/AccumulatedOutput/Resultsets[$j]/ResultSet1/Record1/IntDomID"/>
                            </intDomID>
                            <billLanguageId>
                                <xsl:value-of select="$Scalas/AccumulatedOutput/Resultsets[$j]/ResultSet1/Record1/BillLanguageId"/>
                            </billLanguageId>
                            <costBillingSystemId>
                                <xsl:value-of select="$Scalas/AccumulatedOutput/Resultsets[$j]/ResultSet1/Record1/CostBillingSystemId"/>
                            </costBillingSystemId>
                            <revenueBillingSystemId>
                                <xsl:value-of select="$Scalas/AccumulatedOutput/Resultsets[$j]/ResultSet1/Record1/RevenueBillingSystemId"/>
                            </revenueBillingSystemId>
                            <specifyConsumerId>
                                <xsl:value-of select="$Scalas/AccumulatedOutput/Resultsets[$j]/ResultSet1/Record1/SpecifyConsumerId"/>
                            </specifyConsumerId>
                            <sMSProjectNotif>
                                <xsl:value-of select="$Scalas/AccumulatedOutput/Resultsets[$j]/ResultSet1/Record1/SMSProjectNotif"/>
                            </sMSProjectNotif>
                            <ringUpPhone>
                                <xsl:value-of select="$Scalas/AccumulatedOutput/Resultsets[$j]/ResultSet1/Record1/RingUpPhone"/>
                            </ringUpPhone>
                            <ringUpEMail>
                                <xsl:value-of select="$Scalas/AccumulatedOutput/Resultsets[$j]/ResultSet1/Record1/RingUpEMail"/>
                            </ringUpEMail>
                            <digitalSignature>
                                <xsl:value-of select="$Scalas/AccumulatedOutput/Resultsets[$j]/ResultSet1/Record1/DigitalSignature"/>
                            </digitalSignature>
                            <digitalSignatureDate>
                                <xsl:value-of select="$Scalas/AccumulatedOutput/Resultsets[$j]/ResultSet1/Record1/DigitalSignatureDate"/>
                            </digitalSignatureDate>
                            <digitalSignatureId>
                                <xsl:value-of select="$Scalas/AccumulatedOutput/Resultsets[$j]/ResultSet1/Record1/DigitalSignatureId"/>
                            </digitalSignatureId>
                            <scalaNumberVKId>
                                <xsl:value-of select="$Scalas/AccumulatedOutput/Resultsets[$j]/ResultSet1/Record1/ScalaNumberVKId"/>
                            </scalaNumberVKId>
                            <trafficTypeId>
                                <xsl:value-of select="$Scalas/AccumulatedOutput/Resultsets[$j]/ResultSet1/Record1/TrafficTypeId"/>
                            </trafficTypeId>
                        </scalaParams>
                        <recordId>
                            <xsl:value-of select="$Scalas/AccumulatedOutput/Resultsets[$j]/ResultSet1/Record1/Id"/>
                        </recordId>
                    </input>
                </ns:ActivityInputClass>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Parse Scala Update JSON">
            <pd:type>com.tibco.plugin.json.activities.JSONParserActivity</pd:type>
            <pd:resourceType>ae.activities.JSONParserActivity</pd:resourceType>
            <pd:x>616</pd:x>
            <pd:y>543</pd:y>
            <config>
                <SchemaType>xsdType</SchemaType>
                <BadgerfishCheck>false</BadgerfishCheck>
                <ActivityOutputEditor>
                    <xsd:element name="inputParams">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="recordId" type="xsd:long"/>
                                <xsd:element name="opResult" type="xsd:int"/>
                                <xsd:element name="opErrorText" type="xsd:string"/>
                                <xsd:element name="info" type="xsd:string"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                </ActivityOutputEditor>
            </config>
            <pd:inputBindings>
                <ns:ActivityInputClass>
                    <jsonString>
                        <xsl:value-of select="$Update-scala/JSONoutput"/>
                    </jsonString>
                </ns:ActivityInputClass>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Parse Scala Info JSON">
            <pd:type>com.tibco.plugin.json.activities.JSONParserActivity</pd:type>
            <pd:resourceType>ae.activities.JSONParserActivity</pd:resourceType>
            <pd:x>742</pd:x>
            <pd:y>542</pd:y>
            <config>
                <SchemaType>xsdType</SchemaType>
                <BadgerfishCheck>false</BadgerfishCheck>
                <ActivityOutputEditor>
                    <xsd:element name="info">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="nbo" type="xsd:string"/>
                                <xsd:element name="scalan" type="xsd:string"/>
                                <xsd:element name="error" type="xsd:string"/>
                                <xsd:element name="underControl" type="xsd:int"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                </ActivityOutputEditor>
            </config>
            <pd:inputBindings>
                <ns:ActivityInputClass>
                    <jsonString>
                        <xsl:value-of select="$Parse-Scala-Update-JSON/ns:ActivityOutputClass/inputParams/info"/>
                    </jsonString>
                </ns:ActivityInputClass>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="Contract CreateUpdateDelete 1">
        <pd:type>com.tibco.plugin.jdbc.JDBCCallActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCCallActivity</pd:resourceType>
        <pd:x>585</pd:x>
        <pd:y>365</pd:y>
        <config>
            <timeout>%%Timeout%%</timeout>
            <maxRows>100</maxRows>
            <emptyStrAsNil>true</emptyStrAsNil>
            <jdbcSharedConfig>/Connection/MSSQL Connection (SF).sharedjdbc</jdbcSharedConfig>
            <ProcedureName>Contract_CreateUpdateDelete;1</ProcedureName>
            <useSchema>false</useSchema>
            <schema>%%Schema%%</schema>
            <parameterTypes>
                <parameter>
                    <colName>@RETURN_VALUE</colName>
                    <colType>5</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
                <parameter>
                    <colName>@opType</colName>
                    <colType>1</colType>
                    <dataType>-6</dataType>
                    <typeName>tinyint</typeName>
                </parameter>
                <parameter>
                    <colName>@adLogin</colName>
                    <colType>1</colType>
                    <dataType>12</dataType>
                    <typeName>varchar</typeName>
                </parameter>
                <parameter>
                    <colName>@clientID</colName>
                    <colType>1</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
                <parameter>
                    <colName>@contractParams</colName>
                    <colType>1</colType>
                    <dataType>12</dataType>
                    <typeName>varchar</typeName>
                </parameter>
                <parameter>
                    <colName>@recordId</colName>
                    <colType>2</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
                <parameter>
                    <colName>@opResult</colName>
                    <colType>2</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
                <parameter>
                    <colName>@opErrorText</colName>
                    <colType>2</colType>
                    <dataType>12</dataType>
                    <typeName>varchar</typeName>
                </parameter>
            </parameterTypes>
        </config>
        <pd:inputBindings>
            <inputs>
                <inputSet>
                    <opType>
                        <xsl:value-of select="2"/>
                    </opType>
                    <adLogin>
                        <xsl:value-of select="$Start/inputParams/adLogin"/>
                    </adLogin>
                    <clientID>
                        <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/clientID"/>
                    </clientID>
                    <contractParams>
                        <xsl:value-of select="$Render-XML-1/xmlString"/>
                    </contractParams>
                    <recordId>
                        <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractID"/>
                    </recordId>
                    <opResult>
                        <xsl:value-of select="0"/>
                    </opResult>
                    <opErrorText>
                        <xsl:value-of select="0"/>
                    </opErrorText>
                </inputSet>
            </inputs>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Contract CreateUpdateDelete 2">
        <pd:type>com.tibco.plugin.jdbc.JDBCCallActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCCallActivity</pd:resourceType>
        <pd:x>995</pd:x>
        <pd:y>548</pd:y>
        <config>
            <timeout>%%Timeout%%</timeout>
            <maxRows>100</maxRows>
            <emptyStrAsNil>true</emptyStrAsNil>
            <jdbcSharedConfig>/Connection/MSSQL Connection (SF).sharedjdbc</jdbcSharedConfig>
            <ProcedureName>Contract_CreateUpdateDelete;1</ProcedureName>
            <useSchema>false</useSchema>
            <schema>%%Schema%%</schema>
            <parameterTypes>
                <parameter>
                    <colName>@RETURN_VALUE</colName>
                    <colType>5</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
                <parameter>
                    <colName>@opType</colName>
                    <colType>1</colType>
                    <dataType>-6</dataType>
                    <typeName>tinyint</typeName>
                </parameter>
                <parameter>
                    <colName>@adLogin</colName>
                    <colType>1</colType>
                    <dataType>12</dataType>
                    <typeName>varchar</typeName>
                </parameter>
                <parameter>
                    <colName>@clientID</colName>
                    <colType>1</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
                <parameter>
                    <colName>@contractParams</colName>
                    <colType>1</colType>
                    <dataType>12</dataType>
                    <typeName>varchar</typeName>
                </parameter>
                <parameter>
                    <colName>@recordId</colName>
                    <colType>2</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
                <parameter>
                    <colName>@opResult</colName>
                    <colType>2</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
                <parameter>
                    <colName>@opErrorText</colName>
                    <colType>2</colType>
                    <dataType>12</dataType>
                    <typeName>varchar</typeName>
                </parameter>
            </parameterTypes>
        </config>
        <pd:inputBindings>
            <inputs>
                <inputSet>
                    <opType>
                        <xsl:value-of select="2"/>
                    </opType>
                    <adLogin>
                        <xsl:value-of select="$Start/inputParams/adLogin"/>
                    </adLogin>
                    <clientID>
                        <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/clientID"/>
                    </clientID>
                    <contractParams>
                        <xsl:value-of select="$Render-XML-2/xmlString"/>
                    </contractParams>
                    <recordId>
                        <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractID"/>
                    </recordId>
                    <opResult>
                        <xsl:value-of select="0"/>
                    </opResult>
                    <opErrorText>
                        <xsl:value-of select="0"/>
                    </opErrorText>
                </inputSet>
            </inputs>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Render XML 2">
        <pd:type>com.tibco.plugin.xml.XMLRendererActivity</pd:type>
        <pd:resourceType>ae.activities.XMLRendererActivity</pd:resourceType>
        <pd:x>886</pd:x>
        <pd:y>532</pd:y>
        <config>
            <renderAsText>text</renderAsText>
            <validateInput>false</validateInput>
            <textEncoding>windows-1251</textEncoding>
            <term>
                <xsd:element name="contract">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="ContractClientName" type="xsd:string"/>
                            <xsd:element name="ContractTypeSFId" type="xsd:long"/>
                            <xsd:element name="BreakDate" type="xsd:dateTime"/>
                            <xsd:element name="BreakCauseId" type="xsd:long"/>
                            <xsd:element name="ContactId" type="xsd:long"/>
                            <xsd:element name="SignedDate" type="xsd:dateTime"/>
                            <xsd:element name="OperLicenseId" type="xsd:long"/>
                            <xsd:element name="JoinLevelId" type="xsd:long"/>
                            <xsd:element name="CrossClientID" type="xsd:long"/>
                            <xsd:element name="ABHId" type="xsd:long"/>
                            <xsd:element name="ContractInvoiceId" type="xsd:long"/>
                            <xsd:element name="ProfitID" type="xsd:long"/>
                            <xsd:element name="SetFineId" type="xsd:long"/>
                            <xsd:element name="FineTypeId" type="xsd:long"/>
                            <xsd:element name="Fine" type="xsd:string"/>
                            <xsd:element name="PenyRFRId" type="xsd:long"/>
                            <xsd:element name="InvoicePayPeriod" type="xsd:string"/>
                            <xsd:element name="BillingCycleCode" type="xsd:string"/>
                            <xsd:element name="AgreePrivateInfoId" type="xsd:long"/>
                            <xsd:element name="Bank" type="xsd:string"/>
                            <xsd:element name="Account" type="xsd:string"/>
                            <xsd:element name="BIK" type="xsd:string"/>
                            <xsd:element name="CorrAccount" type="xsd:string"/>
                            <xsd:element name="KPP" type="xsd:string"/>
                            <xsd:element name="DealPassport" type="xsd:string"/>
                            <xsd:element name="FineWarrantNumber" type="xsd:string"/>
                            <xsd:element name="DealBank" type="xsd:string"/>
                            <xsd:element name="scalas">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="scala">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="nbo" type="xsd:string"/>
                                                    <xsd:element name="scalan" type="xsd:string"/>
                                                    <xsd:element name="error" type="xsd:string"/>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </term>
        </config>
        <pd:inputBindings>
            <contract>
                <ContractClientName>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/contractClientName"/>
                </ContractClientName>
                <ContractTypeSFId>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/contractTypeSFId"/>
                </ContractTypeSFId>
                <BreakDate>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/breakDate"/>
                </BreakDate>
                <BreakCauseId>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/breakCauseId"/>
                </BreakCauseId>
                <ContactId>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/contactId"/>
                </ContactId>
                <SignedDate>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/signedDate"/>
                </SignedDate>
                <OperLicenseId>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/operLicenseId"/>
                </OperLicenseId>
                <JoinLevelId>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/joinLevelId"/>
                </JoinLevelId>
                <CrossClientID>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/crossClientID"/>
                </CrossClientID>
                <ABHId>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/aBHId"/>
                </ABHId>
                <ContractInvoiceId>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/contractInvoiceId"/>
                </ContractInvoiceId>
                <ProfitID>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/profitID"/>
                </ProfitID>
                <SetFineId>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/setFineId"/>
                </SetFineId>
                <FineTypeId>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/fineTypeId"/>
                </FineTypeId>
                <Fine>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/fine"/>
                </Fine>
                <PenyRFRId>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/penyRFRId"/>
                </PenyRFRId>
                <InvoicePayPeriod>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/invoicePayPeriod"/>
                </InvoicePayPeriod>
                <BillingCycleCode>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/billingCycleCode"/>
                </BillingCycleCode>
                <AgreePrivateInfoId>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/agreePrivateInfoId"/>
                </AgreePrivateInfoId>
                <Bank>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/bank"/>
                </Bank>
                <Account>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/account"/>
                </Account>
                <BIK>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/bik"/>
                </BIK>
                <CorrAccount>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/corrAccount"/>
                </CorrAccount>
                <KPP>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/kpp"/>
                </KPP>
                <DealPassport>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/dealPassport"/>
                </DealPassport>
                <FineWarrantNumber>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/fineWarrantNumber"/>
                </FineWarrantNumber>
                <DealBank>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/dealBank"/>
                </DealBank>
                <scalas>
                    <scala>
                        <nbo>
                            <xsl:value-of select="$ScalaInfoOutput/AccumulatedOutput/ns:ActivityOutputClass[info/underControl = 1]/info/nbo"/>
                        </nbo>
                        <scalan>
                            <xsl:value-of select="$ScalaInfoOutput/AccumulatedOutput/ns:ActivityOutputClass[info/underControl = 1]/info/scalan"/>
                        </scalan>
                        <error>
                            <xsl:value-of select="$ScalaInfoOutput/AccumulatedOutput/ns:ActivityOutputClass[info/underControl = 1]/info/error"/>
                        </error>
                    </scala>
                </scalas>
            </contract>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate Error 2">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>832</pd:x>
        <pd:y>348</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns2:ActivityInput>
                <xsl:if test="not(($Contract-CreateUpdateDelete-1/resultSet/outputSet/opErrorText/@xsi:nil=(&quot;true&quot;)) or ($Contract-CreateUpdateDelete-1/resultSet/outputSet/opErrorText/@xsi:nil=(&quot;1&quot;)))">
                    <message>
                        <xsl:value-of select="$Contract-CreateUpdateDelete-1/resultSet/outputSet/opErrorText"/>
                    </message>
                </xsl:if>
                <xsl:if test="not(($Contract-CreateUpdateDelete-1/resultSet/outputSet/opResult/@xsi:nil=(&quot;true&quot;)) or ($Contract-CreateUpdateDelete-1/resultSet/outputSet/opResult/@xsi:nil=(&quot;1&quot;)))">
                    <messageCode>
                        <xsl:value-of select="$Contract-CreateUpdateDelete-1/resultSet/outputSet/opResult"/>
                    </messageCode>
                </xsl:if>
            </ns2:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate Error 4">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>994</pd:x>
        <pd:y>442</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns2:ActivityInput>
                <xsl:if test="not(($Contract-CreateUpdateDelete-1/resultSet/outputSet/opErrorText/@xsi:nil=(&quot;true&quot;)) or ($Contract-CreateUpdateDelete-1/resultSet/outputSet/opErrorText/@xsi:nil=(&quot;1&quot;)))">
                    <message>
                        <xsl:value-of select="$Contract-CreateUpdateDelete-1/resultSet/outputSet/opErrorText"/>
                    </message>
                </xsl:if>
                <xsl:if test="not(($Contract-CreateUpdateDelete-1/resultSet/outputSet/opResult/@xsi:nil=(&quot;true&quot;)) or ($Contract-CreateUpdateDelete-1/resultSet/outputSet/opResult/@xsi:nil=(&quot;1&quot;)))">
                    <messageCode>
                        <xsl:value-of select="$Contract-CreateUpdateDelete-1/resultSet/outputSet/opResult"/>
                    </messageCode>
                </xsl:if>
            </ns2:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate Error 3">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>884</pd:x>
        <pd:y>442</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns2:ActivityInput>
                <message>
                    <xsl:value-of select="concat(&quot;There're no BO released in any scala of contract&quot;, $Parse-JSON/ns:ActivityOutputClass/Client/contractID)"/>
                </message>
                <messageCode>
                    <xsl:value-of select="1"/>
                </messageCode>
            </ns2:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Render XML 1">
        <pd:type>com.tibco.plugin.xml.XMLRendererActivity</pd:type>
        <pd:resourceType>ae.activities.XMLRendererActivity</pd:resourceType>
        <pd:x>143</pd:x>
        <pd:y>218</pd:y>
        <config>
            <renderAsText>text</renderAsText>
            <validateInput>false</validateInput>
            <textEncoding>windows-1251</textEncoding>
            <term>
                <xsd:element name="contract">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="ContractClientName" type="xsd:string"/>
                            <xsd:element name="ContractTypeSFId" type="xsd:long"/>
                            <xsd:element name="BreakDate" type="xsd:dateTime"/>
                            <xsd:element name="BreakCauseId" type="xsd:long"/>
                            <xsd:element name="ContactId" type="xsd:long"/>
                            <xsd:element name="SignedDate" type="xsd:dateTime"/>
                            <xsd:element name="OperLicenseId" type="xsd:long"/>
                            <xsd:element name="JoinLevelId" type="xsd:long"/>
                            <xsd:element name="CrossClientID" type="xsd:long"/>
                            <xsd:element name="ABHId" type="xsd:long"/>
                            <xsd:element name="ContractInvoiceId" type="xsd:long"/>
                            <xsd:element name="ProfitID" type="xsd:long"/>
                            <xsd:element name="SetFineId" type="xsd:long"/>
                            <xsd:element name="FineTypeId" type="xsd:long"/>
                            <xsd:element name="Fine" type="xsd:string"/>
                            <xsd:element name="PenyRFRId" type="xsd:long"/>
                            <xsd:element name="InvoicePayPeriod" type="xsd:string"/>
                            <xsd:element name="BillingCycleCode" type="xsd:string"/>
                            <xsd:element name="AgreePrivateInfoId" type="xsd:long"/>
                            <xsd:element name="Bank" type="xsd:string"/>
                            <xsd:element name="Account" type="xsd:string"/>
                            <xsd:element name="BIK" type="xsd:string"/>
                            <xsd:element name="CorrAccount" type="xsd:string"/>
                            <xsd:element name="KPP" type="xsd:string"/>
                            <xsd:element name="DealPassport" type="xsd:string"/>
                            <xsd:element name="FineWarrantNumber" type="xsd:string"/>
                            <xsd:element name="DealBank" type="xsd:string"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </term>
        </config>
        <pd:inputBindings>
            <contract>
                <ContractClientName>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/contractClientName"/>
                </ContractClientName>
                <ContractTypeSFId>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/contractTypeSFId"/>
                </ContractTypeSFId>
                <BreakDate>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/breakDate"/>
                </BreakDate>
                <BreakCauseId>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/breakCauseId"/>
                </BreakCauseId>
                <ContactId>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/contactId"/>
                </ContactId>
                <SignedDate>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/signedDate"/>
                </SignedDate>
                <OperLicenseId>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/operLicenseId"/>
                </OperLicenseId>
                <JoinLevelId>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/joinLevelId"/>
                </JoinLevelId>
                <CrossClientID>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/crossClientID"/>
                </CrossClientID>
                <ABHId>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/aBHId"/>
                </ABHId>
                <ContractInvoiceId>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/contractInvoiceId"/>
                </ContractInvoiceId>
                <ProfitID>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/profitID"/>
                </ProfitID>
                <SetFineId>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/setFineId"/>
                </SetFineId>
                <FineTypeId>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/fineTypeId"/>
                </FineTypeId>
                <Fine>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/fine"/>
                </Fine>
                <PenyRFRId>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/penyRFRId"/>
                </PenyRFRId>
                <InvoicePayPeriod>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/invoicePayPeriod"/>
                </InvoicePayPeriod>
                <BillingCycleCode>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/billingCycleCode"/>
                </BillingCycleCode>
                <AgreePrivateInfoId>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/agreePrivateInfoId"/>
                </AgreePrivateInfoId>
                <Bank>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/bank"/>
                </Bank>
                <Account>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/account"/>
                </Account>
                <BIK>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/bik"/>
                </BIK>
                <CorrAccount>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/corrAccount"/>
                </CorrAccount>
                <KPP>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/kpp"/>
                </KPP>
                <DealPassport>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/dealPassport"/>
                </DealPassport>
                <FineWarrantNumber>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/fineWarrantNumber"/>
                </FineWarrantNumber>
                <DealBank>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractParams/dealBank"/>
                </DealBank>
            </contract>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Search">
        <pd:type>com.tibco.plugin.jdbc.JDBCCallActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCCallActivity</pd:resourceType>
        <pd:x>244</pd:x>
        <pd:y>221</pd:y>
        <config>
            <timeout>%%Timeout%%</timeout>
            <maxRows>1000000</maxRows>
            <emptyStrAsNil>true</emptyStrAsNil>
            <jdbcSharedConfig>/Connection/MSSQL Connection (SF).sharedjdbc</jdbcSharedConfig>
            <ProcedureName>Scala_GetList;1</ProcedureName>
            <useSchema>false</useSchema>
            <commit>false</commit>
            <schema>%%Schema%%</schema>
            <parameterTypes>
                <parameter>
                    <colName>@RETURN_VALUE</colName>
                    <colType>5</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
                <parameter>
                    <colName>@mainSearch</colName>
                    <colType>1</colType>
                    <dataType>12</dataType>
                    <typeName>varchar</typeName>
                </parameter>
                <parameter>
                    <colName>@clientID</colName>
                    <colType>1</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
                <parameter>
                    <colName>@contractID</colName>
                    <colType>1</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
                <parameter>
                    <colName>@pageSize</colName>
                    <colType>1</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
                <parameter>
                    <colName>@currentPage</colName>
                    <colType>1</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
                <parameter>
                    <colName>@underControl</colName>
                    <colType>1</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
                <parameter>
                    <colName>@vkIdIsNull</colName>
                    <colType>1</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
                <parameter>
                    <colName>@totalRecords</colName>
                    <colType>2</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
                <parameter>
                    <colName>@totalPages</colName>
                    <colType>2</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
                <parameter>
                    <colName>@opResult</colName>
                    <colType>2</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
                <parameter>
                    <colName>@opErrorText</colName>
                    <colType>2</colType>
                    <dataType>12</dataType>
                    <typeName>varchar</typeName>
                </parameter>
            </parameterTypes>
        </config>
        <pd:inputBindings>
            <inputs>
                <inputSet>
                    <mainSearch xsi:nil="true"/>
                    <clientID xsi:nil="true"/>
                    <contractID>
                        <xsl:choose>
                            <xsl:when test="exists($Parse-JSON/ns:ActivityOutputClass/Client/contractID)">
                                <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractID"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </contractID>
                    <pageSize>
                        <xsl:value-of select="5000"/>
                    </pageSize>
                    <currentPage>
                        <xsl:value-of select="1"/>
                    </currentPage>
                    <underControl xsi:nil="true"/>
                    <vkIdIsNull xsi:nil="true"/>
                    <totalRecords>
                        <xsl:value-of select="0"/>
                    </totalRecords>
                    <totalPages>
                        <xsl:value-of select="0"/>
                    </totalPages>
                    <opResult>
                        <xsl:value-of select="0"/>
                    </opResult>
                    <opErrorText>
                        <xsl:value-of select="0"/>
                    </opErrorText>
                </inputSet>
            </inputs>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse XML">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>370</pd:x>
        <pd:y>222</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>false</validateOutput>
            <term>
                <xs:element xmlns:xs="http://www.w3.org/2001/XMLSchema" name="Resultsets">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="UpdateCount" type="xsd:int"/>
                            <xs:element name="ResultSet1" maxOccurs="unbounded">
                                <xs:complexType>
                                    <xs:sequence>
                                        <xs:element name="Record1" maxOccurs="unbounded">
                                            <xs:complexType>
                                                <xs:sequence>
                                                    <xs:element name="ID" type="xsd:long"/>
                                                    <xs:element name="Name" type="xsd:string" minOccurs="0"/>
                                                    <xs:element name="IntNum" type="xsd:string" minOccurs="0"/>
                                                    <xs:element name="ClientName" type="xsd:string" minOccurs="0"/>
                                                    <xs:element name="CreateDate" type="xsd:dateTime"/>
                                                </xs:sequence>
                                            </xs:complexType>
                                        </xs:element>
                                    </xs:sequence>
                                </xs:complexType>
                            </xs:element>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
            </term>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$Search/resultSet/UnresolvedResultsets"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate Error 1">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>246</pd:x>
        <pd:y>317</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns2:ActivityInput>
                <message>
                    <xsl:value-of select="'5000 scalas per contract update limit exceeded'"/>
                </message>
                <messageCode>
                    <xsl:value-of select="2"/>
                </messageCode>
            </ns2:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="Iteration">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>468</pd:x>
        <pd:y>139</pd:y>
        <pd:width>238</pd:width>
        <pd:height>155</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>inputLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:over>$Parse-XML/Resultsets/ResultSet1/Record1</pd:over>
            <pd:indexSlot>i</pd:indexSlot>
            <pd:outSlot>Scalas</pd:outSlot>
            <pd:activityOutputName>Parse Scala Card XML</pd:activityOutputName>
            <pd:accumulateOutput>true</pd:accumulateOutput>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Get Scala</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Parse Scala Card XML</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Get Scala</pd:from>
            <pd:to>Parse Scala Card XML</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="Get Scala">
            <pd:type>com.tibco.plugin.jdbc.JDBCCallActivity</pd:type>
            <pd:resourceType>ae.activities.JDBCCallActivity</pd:resourceType>
            <pd:x>542</pd:x>
            <pd:y>222</pd:y>
            <config>
                <timeout>%%Timeout%%</timeout>
                <maxRows>100</maxRows>
                <emptyStrAsNil>false</emptyStrAsNil>
                <jdbcSharedConfig>/Connection/MSSQL Connection (SF).sharedjdbc</jdbcSharedConfig>
                <ProcedureName>Scala_GetRecord;1</ProcedureName>
                <useSchema>false</useSchema>
                <schema>%%Schema%%</schema>
                <parameterTypes>
                    <parameter>
                        <colName>@RETURN_VALUE</colName>
                        <colType>5</colType>
                        <dataType>4</dataType>
                        <typeName>int</typeName>
                    </parameter>
                    <parameter>
                        <colName>@ID</colName>
                        <colType>1</colType>
                        <dataType>4</dataType>
                        <typeName>int</typeName>
                    </parameter>
                    <parameter>
                        <colName>@adLogin</colName>
                        <colType>1</colType>
                        <dataType>12</dataType>
                        <typeName>varchar</typeName>
                    </parameter>
                    <parameter>
                        <colName>@opResult</colName>
                        <colType>2</colType>
                        <dataType>4</dataType>
                        <typeName>int</typeName>
                    </parameter>
                    <parameter>
                        <colName>@opErrorText</colName>
                        <colType>2</colType>
                        <dataType>12</dataType>
                        <typeName>varchar</typeName>
                    </parameter>
                </parameterTypes>
            </config>
            <pd:inputBindings>
                <inputs>
                    <inputSet>
                        <ID>
                            <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1[1]/Record1[$i]/ID"/>
                        </ID>
                        <adLogin>
                            <xsl:value-of select="$Start/inputParams/adLogin"/>
                        </adLogin>
                        <opResult>
                            <xsl:value-of select="0"/>
                        </opResult>
                        <opErrorText>
                            <xsl:value-of select="&quot;&quot;"/>
                        </opErrorText>
                    </inputSet>
                </inputs>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Parse Scala Card XML">
            <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
            <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
            <pd:x>632</pd:x>
            <pd:y>229</pd:y>
            <config>
                <inputStyle>text</inputStyle>
                <xsdVersion>default</xsdVersion>
                <validateOutput>false</validateOutput>
                <term>
                    <xsd:element name="Resultsets">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="UpdateCount" type="xsd:int"/>
                                <xsd:element name="ResultSet1">
                                    <xsd:complexType>
                                        <xsd:sequence>
                                            <xsd:element name="Record1">
                                                <xsd:complexType>
                                                    <xsd:sequence>
                                                        <xsd:element name="opResult" type="xsd:int"/>
                                                        <xsd:element name="opErrorText" type="xsd:string"/>
                                                        <xsd:element name="Id" type="xsd:long"/>
                                                        <xsd:element name="ScalaNumber" type="xsd:string"/>
                                                        <xsd:element name="ContractId" type="xsd:long"/>
                                                        <xsd:element name="ContractNumber" type="xsd:string"/>
                                                        <xsd:element name="ClientId" type="xsd:long"/>
                                                        <xsd:element name="ClientName" type="xsd:string"/>
                                                        <xsd:element name="SpeedCollectAccount" type="xsd:string"/>
                                                        <xsd:element name="BillingAddressId" type="xsd:long"/>
                                                        <xsd:element name="BillingAddressName" type="xsd:string"/>
                                                        <xsd:element name="BillingContactId" type="xsd:long"/>
                                                        <xsd:element name="BillingContactName" type="xsd:string"/>
                                                        <xsd:element name="InvoicePrintId" type="xsd:long"/>
                                                        <xsd:element name="InvoicePrintName" type="xsd:string"/>
                                                        <xsd:element name="InvoiceSendToId" type="xsd:long"/>
                                                        <xsd:element name="InvoiceSendToName" type="xsd:string"/>
                                                        <xsd:element name="VoiceTrafDetailsId" type="xsd:int"/>
                                                        <xsd:element name="VoiceTrafDetailsName" type="xsd:string"/>
                                                        <xsd:element name="EmailForDetails" type="xsd:string"/>
                                                        <xsd:element name="NDSTariffId" type="xsd:int"/>
                                                        <xsd:element name="NDSTariffName" type="xsd:string"/>
                                                        <xsd:element name="InvoiceDeliveryId" type="xsd:int"/>
                                                        <xsd:element name="InvoiceDeliveryName" type="xsd:string"/>
                                                        <xsd:element name="EmailInvoiceDelivery" type="xsd:string"/>
                                                        <xsd:element name="ShowDIDALexpandedId" type="xsd:int"/>
                                                        <xsd:element name="ShowDIDALexpandedName" type="xsd:string"/>
                                                        <xsd:element name="UBGId" type="xsd:int"/>
                                                        <xsd:element name="UBGName" type="xsd:string"/>
                                                        <xsd:element name="GovContractId" type="xsd:string"/>
                                                        <xsd:element name="OppCoopLVLTPId" type="xsd:int"/>
                                                        <xsd:element name="OppCoopLVLTPName" type="xsd:string"/>
                                                        <xsd:element name="IntDomID" type="xsd:string"/>
                                                        <xsd:element name="IntDomName" type="xsd:string"/>
                                                        <xsd:element name="BillingCurrencyId" type="xsd:long"/>
                                                        <xsd:element name="BillingCurrencyName" type="xsd:string"/>
                                                        <xsd:element name="TariffsCurrencyId" type="xsd:long"/>
                                                        <xsd:element name="TariffsCurrencyName" type="xsd:string"/>
                                                        <xsd:element name="BillLanguageId" type="xsd:int"/>
                                                        <xsd:element name="BillLanguageName" type="xsd:string"/>
                                                        <xsd:element name="FinFilialId" type="xsd:long"/>
                                                        <xsd:element name="FinFilialName" type="xsd:string"/>
                                                        <xsd:element name="CostBillingSystemId" type="xsd:long"/>
                                                        <xsd:element name="CostBillingSystemName" type="xsd:string"/>
                                                        <xsd:element name="RevenueBillingSystemId" type="xsd:long"/>
                                                        <xsd:element name="RevenueBillingSystemName" type="xsd:string"/>
                                                        <xsd:element name="QoSId" type="xsd:int"/>
                                                        <xsd:element name="QoSName" type="xsd:string"/>
                                                        <xsd:element name="AgentCollectorId" type="xsd:long"/>
                                                        <xsd:element name="AgentCollectorName" type="xsd:string"/>
                                                        <xsd:element name="AgentCollectorClientName" type="xsd:string"/>
                                                        <xsd:element name="PMNCode" type="xsd:string"/>
                                                        <xsd:element name="ClirInvFTPId" type="xsd:int"/>
                                                        <xsd:element name="ClirInvFTPName" type="xsd:string"/>
                                                        <xsd:element name="SpecifyConsumerId" type="xsd:int"/>
                                                        <xsd:element name="SpecifyConsumerName" type="xsd:string"/>
                                                        <xsd:element name="SMSProjectNotif" type="xsd:int"/>
                                                        <xsd:element name="CloseDate" type="xsd:dateTime"/>
                                                        <xsd:element name="BreakCauseId" type="xsd:long"/>
                                                        <xsd:element name="BreakCauseName" type="xsd:string"/>
                                                        <xsd:element name="RingUpPhone" type="xsd:string"/>
                                                        <xsd:element name="RingUpEMail" type="xsd:string"/>
                                                        <xsd:element name="DigitalSignature" type="xsd:int"/>
                                                        <xsd:element name="DigitalSignatureDate" type="xsd:dateTime"/>
                                                        <xsd:element name="DigitalSignatureId" type="xsd:string"/>
                                                        <xsd:element name="ScalaNumberVKId" type="xsd:long"/>
                                                        <xsd:element name="ScalaNumberVKName" type="xsd:string"/>
                                                        <xsd:element name="TrafficTypeId" type="xsd:int"/>
                                                        <xsd:element name="TrafficTypeName" type="xsd:string"/>
                                                        <xsd:element name="ScalaNumberMGMNName" type="xsd:string"/>
                                                        <xsd:element name="Editable" type="xsd:int"/>
                                                        <xsd:element name="UnderControl" type="xsd:int"/>
                                                        <xsd:element name="NBO" type="xsd:long"/>
                                                    </xsd:sequence>
                                                </xsd:complexType>
                                            </xsd:element>
                                        </xsd:sequence>
                                    </xsd:complexType>
                                </xsd:element>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                </term>
            </config>
            <pd:inputBindings>
                <xmlString>
                    <xsl:value-of select="$Get-Scala/resultSet/UnresolvedResultsets"/>
                </xmlString>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="Generate BO Error">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>830</pd:x>
        <pd:y>225</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <ns2:ActivityInput>
                <message>
                    <xsl:value-of select="&quot;Can't find BO in any scala of this contract&quot;"/>
                </message>
                <messageCode>
                    <xsl:value-of select="2"/>
                </messageCode>
            </ns2:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Render Info JSON">
        <pd:type>com.tibco.plugin.json.activities.JSONRenderActivity</pd:type>
        <pd:resourceType>ae.activities.JSONRenderActivity</pd:resourceType>
        <pd:x>1185</pd:x>
        <pd:y>532</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <removeRootElementForInput>true</removeRootElementForInput>
            <ActivityInputEditor>
                <xsd:element name="info">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="nbo" type="xsd:string"/>
                            <xsd:element name="scalan" type="xsd:string"/>
                            <xsd:element name="error" type="xsd:string"/>
                            <xsd:element name="underControl" type="xsd:string"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </ActivityInputEditor>
        </config>
        <pd:inputBindings>
            <ns:ActivityInputClass>
                <info>
                    <nbo>
                        <xsl:value-of select="$ScalaInfoOutput/AccumulatedOutput/ns:ActivityOutputClass[info/underControl = 1]/info/nbo"/>
                    </nbo>
                    <scalan>
                        <xsl:value-of select="$ScalaInfoOutput/AccumulatedOutput/ns:ActivityOutputClass[info/underControl = 1]/info/scalan"/>
                    </scalan>
                    <error>
                        <xsl:value-of select="$ScalaInfoOutput/AccumulatedOutput/ns:ActivityOutputClass[info/underControl = 1]/info/error"/>
                    </error>
                    <underControl>
                        <xsl:value-of select="$Parse-Contract-Card-XML/Resultsets/ResultSet1/Record1/UnderControl"/>
                    </underControl>
                </info>
            </ns:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Get Contract">
        <pd:type>com.tibco.plugin.jdbc.JDBCCallActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCCallActivity</pd:resourceType>
        <pd:x>145</pd:x>
        <pd:y>99</pd:y>
        <config>
            <timeout>%%Timeout%%</timeout>
            <maxRows>1</maxRows>
            <emptyStrAsNil>false</emptyStrAsNil>
            <jdbcSharedConfig>/Connection/MSSQL Connection (SF).sharedjdbc</jdbcSharedConfig>
            <ProcedureName>Contract_GetRecord;1</ProcedureName>
            <useSchema>false</useSchema>
            <schema>%%Schema%%</schema>
            <parameterTypes>
                <parameter>
                    <colName>@RETURN_VALUE</colName>
                    <colType>5</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
                <parameter>
                    <colName>@ID</colName>
                    <colType>1</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
                <parameter>
                    <colName>@adLogin</colName>
                    <colType>1</colType>
                    <dataType>12</dataType>
                    <typeName>varchar</typeName>
                </parameter>
                <parameter>
                    <colName>@opResult</colName>
                    <colType>2</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
                <parameter>
                    <colName>@opErrorText</colName>
                    <colType>2</colType>
                    <dataType>12</dataType>
                    <typeName>varchar</typeName>
                </parameter>
            </parameterTypes>
        </config>
        <pd:inputBindings>
            <inputs>
                <inputSet>
                    <ID>
                        <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractID"/>
                    </ID>
                    <adLogin>
                        <xsl:value-of select="$Start/inputParams/adLogin"/>
                    </adLogin>
                    <opResult>
                        <xsl:value-of select="0"/>
                    </opResult>
                    <opErrorText>
                        <xsl:value-of select="&quot;&quot;"/>
                    </opErrorText>
                </inputSet>
            </inputs>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse Contract Card XML">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>241</pd:x>
        <pd:y>107</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>false</validateOutput>
            <term>
                <xsd:element name="Resultsets">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="UpdateCount" type="xsd:int"/>
                            <xsd:element name="ResultSet1">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="Record1">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="Id" type="xsd:long"/>
                                                    <xsd:element name="ClientId" type="xsd:long"/>
                                                    <xsd:element name="ClientName" type="xsd:string"/>
                                                    <xsd:element name="ContractNumber" type="xsd:string"/>
                                                    <xsd:element name="ContractClientName" type="xsd:string"/>
                                                    <xsd:element name="SalesManagerId" type="xsd:long"/>
                                                    <xsd:element name="SalesManagerName" type="xsd:string"/>
                                                    <xsd:element name="ContractTypeSFId" type="xsd:long"/>
                                                    <xsd:element name="ContractTypeSFName" type="xsd:string"/>
                                                    <xsd:element name="ContactId" type="xsd:long"/>
                                                    <xsd:element name="ContactName" type="xsd:string"/>
                                                    <xsd:element name="SignedDate" type="xsd:dateTime"/>
                                                    <xsd:element name="OperLicenseId" type="xsd:long"/>
                                                    <xsd:element name="OperLicenseName" type="xsd:string"/>
                                                    <xsd:element name="JoinLevelId" type="xsd:long"/>
                                                    <xsd:element name="JoinLevelName" type="xsd:string"/>
                                                    <xsd:element name="CollectionManagerId" type="xsd:long"/>
                                                    <xsd:element name="CollectionManagerName" type="xsd:string"/>
                                                    <xsd:element name="CollectionStatus" type="xsd:string"/>
                                                    <xsd:element name="CrossClientID" type="xsd:long"/>
                                                    <xsd:element name="USFId" type="xsd:long"/>
                                                    <xsd:element name="USFName" type="xsd:string"/>
                                                    <xsd:element name="BlockDate" type="xsd:dateTime"/>
                                                    <xsd:element name="BlockOpStatusId" type="xsd:long"/>
                                                    <xsd:element name="BlockOpStatusName" type="xsd:string"/>
                                                    <xsd:element name="ABHId" type="xsd:long"/>
                                                    <xsd:element name="ABHName" type="xsd:string"/>
                                                    <xsd:element name="ContractInvoiceId" type="xsd:long"/>
                                                    <xsd:element name="ContractInvoiceName" type="xsd:string"/>
                                                    <xsd:element name="ContractInvoiceClientName" type="xsd:string"/>
                                                    <xsd:element name="SendDataToExtId" type="xsd:long"/>
                                                    <xsd:element name="SendDataToExtame" type="xsd:string"/>
                                                    <xsd:element name="VAT" type="xsd:string"/>
                                                    <xsd:element name="ProfitID" type="xsd:long"/>
                                                    <xsd:element name="ProfitName" type="xsd:string"/>
                                                    <xsd:element name="SetFineId" type="xsd:long"/>
                                                    <xsd:element name="SetFineName" type="xsd:string"/>
                                                    <xsd:element name="FineTypeId" type="xsd:long"/>
                                                    <xsd:element name="FineTypeName" type="xsd:string"/>
                                                    <xsd:element name="Fine" type="xsd:string"/>
                                                    <xsd:element name="PenyRFRId" type="xsd:long"/>
                                                    <xsd:element name="PenyRFRName" type="xsd:string"/>
                                                    <xsd:element name="InvoicePayPeriod" type="xsd:string"/>
                                                    <xsd:element name="BreakDate" type="xsd:dateTime"/>
                                                    <xsd:element name="BreakCauseId" type="xsd:long"/>
                                                    <xsd:element name="BreakCauseName" type="xsd:string"/>
                                                    <xsd:element name="BusinnesUnitId" type="xsd:long"/>
                                                    <xsd:element name="BusinnesUnitName" type="xsd:string"/>
                                                    <xsd:element name="SupplierId" type="xsd:long"/>
                                                    <xsd:element name="SupplierName" type="xsd:string"/>
                                                    <xsd:element name="Branch" type="xsd:string"/>
                                                    <xsd:element name="Balance" type="xsd:string"/>
                                                    <xsd:element name="BillingCycleCode" type="xsd:string"/>
                                                    <xsd:element name="BillingCycleName" type="xsd:string"/>
                                                    <xsd:element name="SegmentId" type="xsd:long"/>
                                                    <xsd:element name="SegmentName" type="xsd:string"/>
                                                    <xsd:element name="ServiceLevelId" type="xsd:long"/>
                                                    <xsd:element name="ServiceLevelName" type="xsd:string"/>
                                                    <xsd:element name="AgreePrivateInfoId" type="xsd:long"/>
                                                    <xsd:element name="AgreePrivateInfoName" type="xsd:string"/>
                                                    <xsd:element name="Bank" type="xsd:string"/>
                                                    <xsd:element name="Account" type="xsd:string"/>
                                                    <xsd:element name="BIK" type="xsd:string"/>
                                                    <xsd:element name="CorrAccount" type="xsd:string"/>
                                                    <xsd:element name="KPP" type="xsd:string"/>
                                                    <xsd:element name="DealPassport" type="xsd:string"/>
                                                    <xsd:element name="DealBank" type="xsd:string"/>
                                                    <xsd:element name="SaleOfficeId" type="xsd:long"/>
                                                    <xsd:element name="SaleOfficeName" type="xsd:string"/>
                                                    <xsd:element name="SalePointId" type="xsd:long"/>
                                                    <xsd:element name="SalePointName" type="xsd:string"/>
                                                    <xsd:element name="UnderControl" type="xsd:int"/>
                                                    <xsd:element name="FineWarrantNumber" type="xsd:string"/>
                                                    <xsd:element name="Editable" type="xsd:int"/>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </term>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Get-Contract/resultSet/UnresolvedResultsets"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Contract CreateUpdateDelete 3">
        <pd:type>com.tibco.plugin.jdbc.JDBCCallActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCCallActivity</pd:resourceType>
        <pd:x>961</pd:x>
        <pd:y>114</pd:y>
        <config>
            <timeout>%%Timeout%%</timeout>
            <maxRows>100</maxRows>
            <emptyStrAsNil>true</emptyStrAsNil>
            <jdbcSharedConfig>/Connection/MSSQL Connection (SF).sharedjdbc</jdbcSharedConfig>
            <ProcedureName>Contract_CreateUpdateDelete;1</ProcedureName>
            <useSchema>false</useSchema>
            <schema>%%Schema%%</schema>
            <parameterTypes>
                <parameter>
                    <colName>@RETURN_VALUE</colName>
                    <colType>5</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
                <parameter>
                    <colName>@opType</colName>
                    <colType>1</colType>
                    <dataType>-6</dataType>
                    <typeName>tinyint</typeName>
                </parameter>
                <parameter>
                    <colName>@adLogin</colName>
                    <colType>1</colType>
                    <dataType>12</dataType>
                    <typeName>varchar</typeName>
                </parameter>
                <parameter>
                    <colName>@clientID</colName>
                    <colType>1</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
                <parameter>
                    <colName>@contractParams</colName>
                    <colType>1</colType>
                    <dataType>12</dataType>
                    <typeName>varchar</typeName>
                </parameter>
                <parameter>
                    <colName>@recordId</colName>
                    <colType>2</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
                <parameter>
                    <colName>@opResult</colName>
                    <colType>2</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
                <parameter>
                    <colName>@opErrorText</colName>
                    <colType>2</colType>
                    <dataType>12</dataType>
                    <typeName>varchar</typeName>
                </parameter>
            </parameterTypes>
        </config>
        <pd:inputBindings>
            <inputs>
                <inputSet>
                    <opType>
                        <xsl:value-of select="2"/>
                    </opType>
                    <adLogin>
                        <xsl:value-of select="$Start/inputParams/adLogin"/>
                    </adLogin>
                    <clientID>
                        <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/clientID"/>
                    </clientID>
                    <contractParams>
                        <xsl:value-of select="$Render-XML-1/xmlString"/>
                    </contractParams>
                    <recordId>
                        <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contractID"/>
                    </recordId>
                    <opResult>
                        <xsl:value-of select="0"/>
                    </opResult>
                    <opErrorText>
                        <xsl:value-of select="0"/>
                    </opErrorText>
                </inputSet>
            </inputs>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Contract CreateUpdateDelete 1</pd:from>
        <pd:to>Iterate</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Iterate</pd:from>
        <pd:to>Render XML 2</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Render XML 2</pd:from>
        <pd:to>Contract CreateUpdateDelete 2</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>exists($ScalaInfoOutput/AccumulatedOutput/ns:ActivityOutputClass[info/underControl = 1]/info/nbo)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Contract CreateUpdateDelete 1</pd:from>
        <pd:to>Generate Error 2</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Contract-CreateUpdateDelete-1/resultSet/outputSet/opResult !=0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Contract CreateUpdateDelete 2</pd:from>
        <pd:to>Generate Error 4</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Contract-CreateUpdateDelete-2/resultSet/outputSet/opResult !=0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Render XML 2</pd:from>
        <pd:to>Generate Error 3</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Render JSON</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Parse JSON</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse JSON</pd:from>
        <pd:to>Render XML 1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Search</pd:from>
        <pd:to>Parse XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Search</pd:from>
        <pd:to>Generate Error 1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Search/resultSet/outputSet/totalPages &gt; 1</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>Iteration</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Iteration</pd:from>
        <pd:to>Generate BO Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Render Info JSON</pd:from>
        <pd:to>Render JSON</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Render XML 1</pd:from>
        <pd:to>Get Contract</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Get Contract</pd:from>
        <pd:to>Parse Contract Card XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse Contract Card XML</pd:from>
        <pd:to>Search</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Parse-Contract-Card-XML/Resultsets/ResultSet1/Record1/UnderControl = 1</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Iteration</pd:from>
        <pd:to>Contract CreateUpdateDelete 1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>exists($Scalas/AccumulatedOutput/Resultsets/ResultSet1/Record1/NBO)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Contract CreateUpdateDelete 2</pd:from>
        <pd:to>Render Info JSON</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse Contract Card XML</pd:from>
        <pd:to>Contract CreateUpdateDelete 3</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Contract CreateUpdateDelete 3</pd:from>
        <pd:to>Render JSON</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>