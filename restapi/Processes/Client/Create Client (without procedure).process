<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns1="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://www.tibco.com/namespaces/tnt/plugins/json" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <pd:name>Processes/Client/Create Client (without procedure).process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="inputParams">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="adLogin" type="xsd:string"/>
                    <xsd:element name="inputJSON" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>32</pd:startX>
    <pd:startY>122</pd:startY>
    <pd:returnBindings>
        <JSONoutput>
            <xsl:value-of select="if (count($Catch/exceptiondata)>0) then $Render-error-JSON/ns:ActivityOutputClass/jsonString  else $Render-JSON/ns:ActivityOutputClass/jsonString"/>
        </JSONoutput>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="JSONoutput" type="xsd:string"/>
    </pd:endType>
    <pd:endX>1234</pd:endX>
    <pd:endY>261</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1521575913877</pd:targetNamespace>
    <pd:activity name="Render JSON">
        <pd:type>com.tibco.plugin.json.activities.JSONRenderActivity</pd:type>
        <pd:resourceType>ae.activities.JSONRenderActivity</pd:resourceType>
        <pd:x>1058</pd:x>
        <pd:y>105</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <removeRootElementForInput>true</removeRootElementForInput>
            <ActivityInputEditor>
                <xsd:element name="inputParams">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="recordId" type="xsd:long"/>
                            <xsd:element name="opResult" type="xsd:int"/>
                            <xsd:element name="opErrorText" type="xsd:string"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </ActivityInputEditor>
        </config>
        <pd:inputBindings>
            <ns:ActivityInputClass>
                <inputParams>
                    <recordId>
                        <xsl:value-of select="$Create-Contact-without-procedure/result/recordId"/>
                    </recordId>
                    <opResult>
                        <xsl:value-of select="$Create-Contact-without-procedure/result/opResult"/>
                    </opResult>
                    <opErrorText>
                        <xsl:value-of select="$Create-Contact-without-procedure/result/opErrorText"/>
                    </opErrorText>
                </inputParams>
            </ns:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse JSON">
        <pd:type>com.tibco.plugin.json.activities.JSONParserActivity</pd:type>
        <pd:resourceType>ae.activities.JSONParserActivity</pd:resourceType>
        <pd:x>150</pd:x>
        <pd:y>121</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <ActivityOutputEditor>
                <xsd:element name="Client">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="clientType" type="xsd:int"/>
                            <xsd:element name="clientName" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="companyBranch" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="clientCharacter" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="clientInformSource" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="clientTrademark" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="clientOrgForm" type="xsd:int" minOccurs="0"/>
                            <xsd:element name="clientShortName" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="inn" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="www" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="clientDateReg" type="xsd:dateTime" minOccurs="0"/>
                            <xsd:element name="okvedID" type="xsd:long" minOccurs="0"/>
                            <xsd:element name="ogrn" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="okpo" type="xsd:string"/>
                            <xsd:element name="kpp" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="contactFirstName" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="contactLastName" type="xsd:string"/>
                            <xsd:element name="contactMiddleName" type="xsd:string"/>
                            <xsd:element name="contactPhone" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="contactEmail" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </ActivityOutputEditor>
        </config>
        <pd:inputBindings>
            <ns:ActivityInputClass>
                <jsonString>
                    <xsl:value-of select="$Start/inputParams/inputJSON"/>
                </jsonString>
            </ns:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Check user's existing">
        <pd:type>com.tibco.plugin.jdbc.JDBCQueryActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCQueryActivity</pd:resourceType>
        <pd:x>284</pd:x>
        <pd:y>127</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <maxRows>100</maxRows>
            <emptyStrAsNil>false</emptyStrAsNil>
            <jdbcSharedConfig>/Connection/MSSQL Connection (SF).sharedjdbc</jdbcSharedConfig>
            <statement>select u.ID as userID, u.SFEmployeeID as clientAM, emp.RN_EMPLOYEE_USER_ID as SFUser
 from mrm.[Users] u 
		inner join employee emp on u.SFEmployeeID = emp.employee_id
		 where u.LoginName = ?</statement>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>adLogin</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
            </Prepared_Param_DataType>
            <oraObjects/>
            <oraTables/>
            <QueryOutputCachedSchemaColumns>userID</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>int</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>clientAM</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>-2</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>binary</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>SFUser</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>-2</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>binary</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
        </config>
        <pd:inputBindings>
            <jdbcQueryActivityInput>
                <adLogin>
                    <xsl:value-of select="$Start/inputParams/adLogin"/>
                </adLogin>
            </jdbcQueryActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Get Internal Number">
        <pd:type>com.tibco.plugin.jdbc.JDBCQueryActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCQueryActivity</pd:resourceType>
        <pd:x>422</pd:x>
        <pd:y>125</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <maxRows>100</maxRows>
            <emptyStrAsNil>false</emptyStrAsNil>
            <jdbcSharedConfig>/Connection/MSSQL Connection (SF).sharedjdbc</jdbcSharedConfig>
            <statement>select GET_NEW_CUST_ID as internalNumber from openquery(BRT, 'select SF_IFACE.get_new_cust_id from dual')</statement>
            <Prepared_Param_DataType/>
            <oraObjects/>
            <oraTables/>
            <QueryOutputCachedSchemaColumns>internalNumber</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>-9</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>nvarchar</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
        </config>
        <pd:inputBindings>
            <jdbcQueryActivityInput/>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate Error">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>281</pd:x>
        <pd:y>324</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <pfx:ActivityInput>
                <message>
                    <xsl:value-of select="&quot;Пользователь не заведен в системе&quot;"/>
                </message>
            </pfx:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>658</pd:x>
        <pd:y>389</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Get ClientSFID">
        <pd:type>com.tibco.plugin.jdbc.JDBCCallActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCCallActivity</pd:resourceType>
        <pd:x>423</pd:x>
        <pd:y>248</pd:y>
        <config>
            <timeout>10</timeout>
            <maxRows>1</maxRows>
            <emptyStrAsNil>false</emptyStrAsNil>
            <jdbcSharedConfig>/Connection/MSSQL Connection (SF).sharedjdbc</jdbcSharedConfig>
            <schema>%%Schema%%</schema>
            <catalog/>
            <ProcedureName>GetNewId;1</ProcedureName>
            <useSchema>false</useSchema>
            <commit>false</commit>
            <parameterTypes>
                <parameter>
                    <colName>@RETURN_VALUE</colName>
                    <colType>5</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
                <parameter>
                    <colName>@tableName</colName>
                    <colType>1</colType>
                    <dataType>12</dataType>
                    <typeName>varchar</typeName>
                </parameter>
                <parameter>
                    <colName>@recordId</colName>
                    <colType>2</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
                <parameter>
                    <colName>@opResult</colName>
                    <colType>2</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
                <parameter>
                    <colName>@opErrorText</colName>
                    <colType>2</colType>
                    <dataType>12</dataType>
                    <typeName>varchar</typeName>
                </parameter>
            </parameterTypes>
        </config>
        <pd:inputBindings>
            <inputs>
                <inputSet>
                    <tableName>
                        <xsl:value-of select="&quot;Company&quot;"/>
                    </tableName>
                    <recordId>
                        <xsl:value-of select="0"/>
                    </recordId>
                    <opResult>
                        <xsl:value-of select="0"/>
                    </opResult>
                    <opErrorText>
                        <xsl:value-of select="&quot;&quot;"/>
                    </opErrorText>
                </inputSet>
            </inputs>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Get Segment Id">
        <pd:type>com.tibco.plugin.jdbc.JDBCQueryActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCQueryActivity</pd:resourceType>
        <pd:x>538</pd:x>
        <pd:y>247</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <maxRows>100</maxRows>
            <emptyStrAsNil>false</emptyStrAsNil>
            <jdbcSharedConfig>/Connection/MSSQL Connection (SF).sharedjdbc</jdbcSharedConfig>
            <statement>Select CC_Customer_Corp_Segment_Id as segmentID from CC_Customer_Corp_Segment 
where Ref_ID = 'SH'</statement>
            <oraObjects/>
            <oraTables/>
            <QueryOutputCachedSchemaColumns>segmentID</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>-2</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>binary</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
        </config>
        <pd:inputBindings>
            <jdbcQueryActivityInput/>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Get-CC_Customer_Corp_Segment_Id-1">
        <pd:type>com.tibco.plugin.jdbc.JDBCQueryActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCQueryActivity</pd:resourceType>
        <pd:x>538</pd:x>
        <pd:y>133</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <maxRows>100</maxRows>
            <emptyStrAsNil>false</emptyStrAsNil>
            <jdbcSharedConfig>/Connection/MSSQL Connection (SF).sharedjdbc</jdbcSharedConfig>
            <statement>select OKVED_ID as SFokvedId, INTERNAL_NUMBER as okvedCode from CC_OKVED_Code where OKVED_CODE_ID = ?</statement>
            <oraObjects/>
            <oraTables/>
            <QueryOutputCachedSchemaColumns>SFokvedId</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>-2</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>binary</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>okvedCode</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>varchar</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>okvedId</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
            </Prepared_Param_DataType>
        </config>
        <pd:inputBindings>
            <jdbcQueryActivityInput>
                <okvedId>
                    <xsl:choose>
                        <xsl:when test="exists($Parse-JSON/ns:ActivityOutputClass/Client/okvedID)">
                            <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/okvedID"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </okvedId>
            </jdbcQueryActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Get newClientSecID">
        <pd:type>com.tibco.plugin.jdbc.JDBCCallActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCCallActivity</pd:resourceType>
        <pd:x>682</pd:x>
        <pd:y>128</pd:y>
        <config>
            <timeout>10</timeout>
            <maxRows>1</maxRows>
            <emptyStrAsNil>false</emptyStrAsNil>
            <jdbcSharedConfig>/Connection/MSSQL Connection (SF).sharedjdbc</jdbcSharedConfig>
            <schema>%%Schema%%</schema>
            <catalog/>
            <ProcedureName>GetNewId;1</ProcedureName>
            <parameterTypes>
                <parameter>
                    <colName>@RETURN_VALUE</colName>
                    <colType>5</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
                <parameter>
                    <colName>@tableName</colName>
                    <colType>1</colType>
                    <dataType>12</dataType>
                    <typeName>varchar</typeName>
                </parameter>
                <parameter>
                    <colName>@recordId</colName>
                    <colType>2</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
                <parameter>
                    <colName>@opResult</colName>
                    <colType>2</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
                <parameter>
                    <colName>@opErrorText</colName>
                    <colType>2</colType>
                    <dataType>12</dataType>
                    <typeName>varchar</typeName>
                </parameter>
            </parameterTypes>
        </config>
        <pd:inputBindings>
            <inputs>
                <inputSet>
                    <tableName>
                        <xsl:value-of select="&quot;Company_sec&quot;"/>
                    </tableName>
                    <recordId>
                        <xsl:value-of select="0"/>
                    </recordId>
                    <opResult>
                        <xsl:value-of select="0"/>
                    </opResult>
                    <opErrorText>
                        <xsl:value-of select="&quot;&quot;"/>
                    </opErrorText>
                </inputSet>
            </inputs>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Render error JSON">
        <pd:type>com.tibco.plugin.json.activities.JSONRenderActivity</pd:type>
        <pd:resourceType>ae.activities.JSONRenderActivity</pd:resourceType>
        <pd:x>904</pd:x>
        <pd:y>390</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <removeRootElementForInput>true</removeRootElementForInput>
            <ActivityInputEditor>
                <xsd:element name="inputParams">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="opResult" type="xsd:int"/>
                            <xsd:element name="opErrorText" type="xsd:string"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </ActivityInputEditor>
        </config>
        <pd:inputBindings>
            <ns:ActivityInputClass>
                <inputParams>
                    <opResult>
                        <xsl:value-of select="2"/>
                    </opResult>
                    <opErrorText>
                        <xsl:value-of select="$Catch/exceptiondata/*"/>
                    </opErrorText>
                </inputParams>
            </ns:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Insert data in company table">
        <pd:type>com.tibco.plugin.jdbc.JDBCUpdateActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCUpdateActivity</pd:resourceType>
        <pd:x>685</pd:x>
        <pd:y>243</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <emptyStrAsNil>false</emptyStrAsNil>
            <statement>insert into Company (Company_id,
                     Customer_Type,
                     Company_Name,
                     INN,
                     Account_Manager_Id,
                     Internal_Number,
                     Short_Name,
                     WWW,
                     OGRN,
                     KPP,
                     Official_Company_Name,
                     Corp_Segment_Id,
                     mrm_MainBranch,
                     mrm_Branch,
                     mrm_Character,
                     mrm_InformSource,
                     mrm_Trademark,
                     OrgForm_Id,
                     mrm_ClientDateReg,
                     OKVED_Code,
                     OKVED_Code_Id,
                     OKVED_Id,
                     mrm_OKPO,
                     Rn_Create_Date,
                     Rn_Edit_Date,
                     Rn_Create_User,
                      Rn_Edit_User,
                     RN_DESCRIPTOR)
values (cast(? as binary(8)), --newClientId
                              ?, --@clientType
                              LEFT(?,90), --@clientName
                              ?, --@inn,
				?, --@clientAM
                              ?, --@internal_number,
                              ?, --@clientShortName,
                              left(?, 150), --@www
                              ?, --@ogrn,
                              ?, --@kpp,
                              ?, --@clientName,
                              ?, --@segmentID,
                              ?, --@companyBranch,
                                 ?, --@companyBranch,
                                 ?, --@clientCharacter,
                                 ?, --@clientInformSource,
                                 ?, --@clientTrademark,
				CAST(? as binary(8)), --@clientOrgForm
                                 ?, --@clientDateReg,
                                 ?, --@okvedCode,
                                 CAST(? as binary(8)), --@okvedID
                                 ?, --@SFokvedID,
                                 ?, --@okpo,
                                 current_timestamp,
                                 current_timestamp,
                                 ?, --@SFUser,
                                 ?, --@SFUser,
                                 LEFT(?,80)) --@clientName</statement>
            <jdbcSharedConfig>/Connection/MSSQL Connection (SF).sharedjdbc</jdbcSharedConfig>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>newClientId</parameterName>
                    <dataType>INTEGER</dataType>
                </parameter>
                <parameter>
                    <parameterName>clientType</parameterName>
                    <dataType>TINYINT</dataType>
                </parameter>
                <parameter>
                    <parameterName>clientName</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>inn</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>clientAM</parameterName>
                    <dataType>BLOB</dataType>
                </parameter>
                <parameter>
                    <parameterName>internal_number</parameterName>
                    <dataType>INTEGER</dataType>
                </parameter>
                <parameter>
                    <parameterName>clientShortName</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>www</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>ogrn</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>kpp</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>clientName</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>segmentId</parameterName>
                    <dataType>BLOB</dataType>
                </parameter>
                <parameter>
                    <parameterName>companyBranch</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>companyBranch</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>clientCharacter</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>clientInformSource</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>clientTrademark</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>clientOrgForm</parameterName>
                    <dataType>INTEGER</dataType>
                </parameter>
                <parameter>
                    <parameterName>clientDateReg</parameterName>
                    <dataType>TIMESTAMP</dataType>
                </parameter>
                <parameter>
                    <parameterName>okvedCode</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>okvedID</parameterName>
                    <dataType>INTEGER</dataType>
                </parameter>
                <parameter>
                    <parameterName>SFokvedID</parameterName>
                    <dataType>BLOB</dataType>
                </parameter>
                <parameter>
                    <parameterName>okpo</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>SFUser</parameterName>
                    <dataType>BLOB</dataType>
                </parameter>
                <parameter>
                    <parameterName>SFUser</parameterName>
                    <dataType>BLOB</dataType>
                </parameter>
                <parameter>
                    <parameterName>clientName</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
            </Prepared_Param_DataType>
        </config>
        <pd:inputBindings>
            <jdbcUpdateActivityInput>
                <newClientId>
                    <xsl:copy-of select="$Get-ClientSFID/resultSet/outputSet/recordId/@xsi:nil"/>
                    <xsl:value-of select="$Get-ClientSFID/resultSet/outputSet/recordId"/>
                </newClientId>
                <clientType>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/clientType"/>
                </clientType>
                <clientName>
                    <xsl:choose>
                        <xsl:when test="exists($Parse-JSON/ns:ActivityOutputClass/Client/clientName)">
                            <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/clientName"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </clientName>
                <inn>
                    <xsl:choose>
                        <xsl:when test="exists($Parse-JSON/ns:ActivityOutputClass/Client/inn)">
                            <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/inn"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </inn>
                <clientAM>
                    <xsl:choose>
                        <xsl:when test="exists($Check-users-existing/resultSet/Record[1]/clientAM)">
                            <xsl:value-of select="$Check-users-existing/resultSet/Record[1]/clientAM"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </clientAM>
                <internal_number>
                    <xsl:choose>
                        <xsl:when test="exists($Get-Internal-Number/resultSet/Record[1]/internalNumber)">
                            <xsl:value-of select="$Get-Internal-Number/resultSet/Record[1]/internalNumber"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </internal_number>
                <clientShortName>
                    <xsl:choose>
                        <xsl:when test="exists($Parse-JSON/ns:ActivityOutputClass/Client/clientShortName)">
                            <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/clientShortName"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </clientShortName>
                <www>
                    <xsl:choose>
                        <xsl:when test="exists($Parse-JSON/ns:ActivityOutputClass/Client/www)">
                            <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/www"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </www>
                <ogrn>
                    <xsl:choose>
                        <xsl:when test="exists($Parse-JSON/ns:ActivityOutputClass/Client/ogrn)">
                            <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/ogrn"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </ogrn>
                <kpp>
                    <xsl:choose>
                        <xsl:when test="exists($Parse-JSON/ns:ActivityOutputClass/Client/kpp)">
                            <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/kpp"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </kpp>
                <clientName>
                    <xsl:choose>
                        <xsl:when test="exists($Parse-JSON/ns:ActivityOutputClass/Client/clientName)">
                            <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/clientName"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </clientName>
                <segmentId>
                    <xsl:choose>
                        <xsl:when test="exists($Get-Segment-Id/resultSet/Record[1]/segmentID)">
                            <xsl:value-of select="$Get-Segment-Id/resultSet/Record[1]/segmentID"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </segmentId>
                <companyBranch>
                    <xsl:choose>
                        <xsl:when test="exists($Parse-JSON/ns:ActivityOutputClass/Client/companyBranch)">
                            <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/companyBranch"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </companyBranch>
                <companyBranch>
                    <xsl:choose>
                        <xsl:when test="exists($Parse-JSON/ns:ActivityOutputClass/Client/companyBranch)">
                            <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/companyBranch"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </companyBranch>
                <clientCharacter>
                    <xsl:choose>
                        <xsl:when test="exists($Parse-JSON/ns:ActivityOutputClass/Client/clientCharacter)">
                            <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/clientCharacter"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </clientCharacter>
                <clientInformSource>
                    <xsl:choose>
                        <xsl:when test="exists($Parse-JSON/ns:ActivityOutputClass/Client/clientInformSource)">
                            <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/clientInformSource"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </clientInformSource>
                <clientTrademark>
                    <xsl:choose>
                        <xsl:when test="exists($Parse-JSON/ns:ActivityOutputClass/Client/clientTrademark)">
                            <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/clientTrademark"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </clientTrademark>
                <clientOrgForm>
                    <xsl:choose>
                        <xsl:when test="exists($Parse-JSON/ns:ActivityOutputClass/Client/clientOrgForm)">
                            <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/clientOrgForm"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </clientOrgForm>
                <clientDateReg>
                    <xsl:choose>
                        <xsl:when test="exists($Parse-JSON/ns:ActivityOutputClass/Client/clientDateReg)">
                            <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/clientDateReg"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </clientDateReg>
                <okvedCode>
                    <xsl:choose>
                        <xsl:when test="exists($Get-CC_Customer_Corp_Segment_Id-1/resultSet/Record[1]/okvedCode)">
                            <xsl:value-of select="$Get-CC_Customer_Corp_Segment_Id-1/resultSet/Record[1]/okvedCode"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </okvedCode>
                <okvedID>
                    <xsl:choose>
                        <xsl:when test="exists($Parse-JSON/ns:ActivityOutputClass/Client/okvedID)">
                            <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/okvedID"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </okvedID>
                <SFokvedID>
                    <xsl:value-of select="$Get-CC_Customer_Corp_Segment_Id-1/resultSet/Record[1]/SFokvedId"/>
                </SFokvedID>
                <okpo>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/okpo"/>
                </okpo>
                <SFUser>
                    <xsl:value-of select="$Check-users-existing/resultSet/Record[1]/SFUser"/>
                </SFUser>
                <SFUser>
                    <xsl:value-of select="$Check-users-existing/resultSet/Record[1]/SFUser"/>
                </SFUser>
                <clientName>
                    <xsl:choose>
                        <xsl:when test="exists($Parse-JSON/ns:ActivityOutputClass/Client/clientName)">
                            <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/clientName"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </clientName>
            </jdbcUpdateActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Compatibility with SF">
        <pd:type>com.tibco.plugin.jdbc.JDBCUpdateActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCUpdateActivity</pd:resourceType>
        <pd:x>829</pd:x>
        <pd:y>240</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <emptyStrAsNil>false</emptyStrAsNil>
            <statement>insert into Company_sec (Company_sec_Id, Company_Id, rn_descriptor, 
		Rn_Create_Date, Rn_Edit_Date, Rn_Create_User, Rn_Edit_User) 
		values (cast(? as binary(8)), cast(? as binary(8)), Null, 
		current_timestamp, current_timestamp, ?, ?)</statement>
            <jdbcSharedConfig>/Connection/MSSQL Connection (SF).sharedjdbc</jdbcSharedConfig>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>newClientSecID</parameterName>
                    <dataType>INTEGER</dataType>
                </parameter>
                <parameter>
                    <parameterName>newClientID</parameterName>
                    <dataType>INTEGER</dataType>
                </parameter>
                <parameter>
                    <parameterName>SFUser</parameterName>
                    <dataType>BLOB</dataType>
                </parameter>
                <parameter>
                    <parameterName>SFUser</parameterName>
                    <dataType>BLOB</dataType>
                </parameter>
            </Prepared_Param_DataType>
        </config>
        <pd:inputBindings>
            <jdbcUpdateActivityInput>
                <newClientSecID>
                    <xsl:copy-of select="$Get-newClientSecID/resultSet/outputSet/recordId/@xsi:nil"/>
                    <xsl:value-of select="$Get-newClientSecID/resultSet/outputSet/recordId"/>
                </newClientSecID>
                <newClientID>
                    <xsl:copy-of select="$Get-ClientSFID/resultSet/outputSet/recordId/@xsi:nil"/>
                    <xsl:value-of select="$Get-ClientSFID/resultSet/outputSet/recordId"/>
                </newClientID>
                <SFUser>
                    <xsl:choose>
                        <xsl:when test="exists($Check-users-existing/resultSet/Record[1]/SFUser)">
                            <xsl:value-of select="$Check-users-existing/resultSet/Record[1]/SFUser"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </SFUser>
                <SFUser>
                    <xsl:choose>
                        <xsl:when test="exists($Check-users-existing/resultSet/Record[1]/SFUser)">
                            <xsl:value-of select="$Check-users-existing/resultSet/Record[1]/SFUser"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </SFUser>
            </jdbcUpdateActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Create Contact (without procedure)">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>982</pd:x>
        <pd:y>246</pd:y>
        <config>
            <processName>/Processes/Client/Create Contact (without procedure).process</processName>
        </config>
        <pd:inputBindings>
            <inputParams>
                <adLogin>
                    <xsl:value-of select="$Start/inputParams/adLogin"/>
                </adLogin>
                <clientID>
                    <xsl:value-of select="$Get-ClientSFID/resultSet/outputSet/recordId"/>
                </clientID>
                <firstName>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contactFirstName"/>
                </firstName>
                <lastName>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contactLastName"/>
                </lastName>
                <middleName>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contactMiddleName"/>
                </middleName>
                <contactPhone>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contactPhone"/>
                </contactPhone>
                <contactEmail>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Client/contactEmail"/>
                </contactEmail>
            </inputParams>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Compatibility with SF</pd:from>
        <pd:to>Create Contact (without procedure)</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Parse JSON</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Render JSON</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse JSON</pd:from>
        <pd:to>Check user's existing</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Check user's existing</pd:from>
        <pd:to>Generate Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Check user's existing</pd:from>
        <pd:to>Get Internal Number</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>exists($Check-users-existing/resultSet/Record/userID)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Get Internal Number</pd:from>
        <pd:to>Get ClientSFID</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Get Segment Id</pd:from>
        <pd:to>Get-CC_Customer_Corp_Segment_Id-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Get-CC_Customer_Corp_Segment_Id-1</pd:from>
        <pd:to>Get newClientSecID</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>Render error JSON</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Render error JSON</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Get ClientSFID</pd:from>
        <pd:to>Get Segment Id</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Get newClientSecID</pd:from>
        <pd:to>Insert data in company table</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Insert data in company table</pd:from>
        <pd:to>Compatibility with SF</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Create Contact (without procedure)</pd:from>
        <pd:to>Render JSON</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>