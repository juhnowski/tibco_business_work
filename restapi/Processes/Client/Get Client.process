<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://www.tibco.com/namespaces/tnt/plugins/json" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <pd:name>Processes/Client/Get Client.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="inputParams">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="clientID" type="xsd:long"/>
                    <xsd:element name="adLogin" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>48</pd:startX>
    <pd:startY>166</pd:startY>
    <pd:returnBindings>
        <JSONoutput>
            <xsl:value-of select="if (count($Catch/exceptiondata)>0) then $Render-error-JSON/ns:ActivityOutputClass/jsonString  else $Render-JSON/ns:ActivityOutputClass/jsonString"/>
        </JSONoutput>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="JSONoutput" type="xsd:string"/>
    </pd:endType>
    <pd:endX>784</pd:endX>
    <pd:endY>167</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1521575913877</pd:targetNamespace>
    <pd:activity name="Render JSON">
        <pd:type>com.tibco.plugin.json.activities.JSONRenderActivity</pd:type>
        <pd:resourceType>ae.activities.JSONRenderActivity</pd:resourceType>
        <pd:x>584</pd:x>
        <pd:y>167</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <removeRootElementForInput>true</removeRootElementForInput>
            <ActivityInputEditor>
                <xsd:element name="inputParams">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="opResult" type="xsd:int"/>
                            <xsd:element name="opErrorText" type="xsd:string"/>
                            <xsd:element name="clientID" type="xsd:long"/>
                            <xsd:element name="clientType" type="xsd:int"/>
                            <xsd:element name="clientTypeName" type="xsd:string"/>
                            <xsd:element name="clientName" type="xsd:string"/>
                            <xsd:element name="segmentID" type="xsd:long"/>
                            <xsd:element name="segmentName" type="xsd:string"/>
                            <xsd:element name="officialStatus" type="xsd:int"/>
                            <xsd:element name="officialStatusName" type="xsd:string"/>
                            <xsd:element name="clientCharacterCode" type="xsd:string"/>
                            <xsd:element name="clientCharacterName" type="xsd:string"/>
                            <xsd:element name="mainBranchCode" type="xsd:string"/>
                            <xsd:element name="mainBranchName" type="xsd:string"/>
                            <xsd:element name="branchCode" type="xsd:string"/>
                            <xsd:element name="branchName" type="xsd:string"/>
                            <xsd:element name="infSourceCode" type="xsd:string"/>
                            <xsd:element name="infSourceName" type="xsd:string"/>
                            <xsd:element name="orgFormID" type="xsd:long"/>
                            <xsd:element name="orgFormName" type="xsd:string"/>
                            <xsd:element name="clientSMID" type="xsd:long"/>
                            <xsd:element name="clientSM" type="xsd:string"/>
                            <xsd:element name="personalManager" type="xsd:string"/>
                            <xsd:element name="trademark" type="xsd:string"/>
                            <xsd:element name="clientShortName" type="xsd:string"/>
                            <xsd:element name="inn" type="xsd:string"/>
                            <xsd:element name="legalAddressId" type="xsd:int"/>
                            <xsd:element name="legalAddressName" type="xsd:string"/>
                            <xsd:element name="contactAddressId" type="xsd:int"/>
                            <xsd:element name="contactAddressName" type="xsd:string"/>
                            <xsd:element name="www" type="xsd:string"/>
                            <xsd:element name="clientDateReg" type="xsd:dateTime"/>
                            <xsd:element name="okvedCodeID" type="xsd:long"/>
                            <xsd:element name="okvedCode" type="xsd:string"/>
                            <xsd:element name="okvedCodeName" type="xsd:string"/>
                            <xsd:element name="kpp" type="xsd:string"/>
                            <xsd:element name="ogrn" type="xsd:string"/>
                            <xsd:element name="okpo" type="xsd:string"/>
                            <xsd:element name="createDate" type="xsd:dateTime"/>
                            <xsd:element name="createUser" type="xsd:string"/>
                            <xsd:element name="createrID" type="xsd:long"/>
                            <xsd:element name="contactID" type="xsd:long"/>
                            <xsd:element name="contactName" type="xsd:string"/>
                            <xsd:element name="contactFirstName" type="xsd:string"/>
                            <xsd:element name="contactLastName" type="xsd:string"/>
                            <xsd:element name="contactMiddleName" type="xsd:string"/>
                            <xsd:element name="contactPhone" type="xsd:string"/>
                            <xsd:element name="contactPhone2" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="contactEmail" type="xsd:string"/>
                            <xsd:element name="companyGroupID" type="xsd:long"/>
                            <xsd:element name="companyGroupName" type="xsd:string"/>
                            <xsd:element name="sparkLiquidationDate" type="xsd:date"/>
                            <xsd:element name="sparkCauseLiquidation" type="xsd:string"/>
                            <xsd:element name="operatorConnect" type="xsd:int"/>
                            <xsd:element name="carrierTypeId" type="xsd:long"/>
                            <xsd:element name="carrierTypeName" type="xsd:string"/>
                            <xsd:element name="clientEditable" type="xsd:int"/>
                            <xsd:element name="contractCount" type="xsd:int"/>
                            <xsd:element name="clientManager" type="xsd:string"/>
                            <xsd:element name="underControl" type="xsd:int"/>
                            <xsd:element name="sparkIsActive" type="xsd:int"/>
                            <xsd:element name="sparkStatusDate" type="xsd:date"/>
                            <xsd:element name="sparkStatus" type="xsd:string"/>
                            <xsd:element name="clientFirstName" type="xsd:string"/>
                            <xsd:element name="clientLastName" type="xsd:string"/>
                            <xsd:element name="clientMiddleName" type="xsd:string"/>
                            <xsd:element name="legalAddressReadyForEdo" type="xsd:int"/>
                            <xsd:element name="inCollection" type="xsd:boolean"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </ActivityInputEditor>
        </config>
        <pd:inputBindings>
            <ns:ActivityInputClass>
                <inputParams>
                    <opResult>
                        <xsl:value-of select="$Get-Client/resultSet/outputSet/opResult"/>
                    </opResult>
                    <opErrorText>
                        <xsl:value-of select="$Get-Client/resultSet/outputSet/opErrorText"/>
                    </opErrorText>
                    <clientID>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/ClientID"/>
                    </clientID>
                    <clientType>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/ClientType"/>
                    </clientType>
                    <clientTypeName>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/ClientTypeName"/>
                    </clientTypeName>
                    <clientName>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/ClientName"/>
                    </clientName>
                    <segmentID>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/SegmentID"/>
                    </segmentID>
                    <segmentName>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/SegmentName"/>
                    </segmentName>
                    <officialStatus>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/OfficialStatus"/>
                    </officialStatus>
                    <officialStatusName>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/OfficialStatusName"/>
                    </officialStatusName>
                    <clientCharacterCode>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/ClientCharacterCode"/>
                    </clientCharacterCode>
                    <clientCharacterName>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/ClientCharacterName"/>
                    </clientCharacterName>
                    <mainBranchCode>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/MainBranchCode"/>
                    </mainBranchCode>
                    <mainBranchName>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/MainBranchName"/>
                    </mainBranchName>
                    <branchCode>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/BranchCode"/>
                    </branchCode>
                    <branchName>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/BranchName"/>
                    </branchName>
                    <infSourceCode>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/InfSourceCode"/>
                    </infSourceCode>
                    <infSourceName>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/InfSourceName"/>
                    </infSourceName>
                    <orgFormID>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/OrgFormID"/>
                    </orgFormID>
                    <orgFormName>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/OrgFormName"/>
                    </orgFormName>
                    <clientSMID>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/ClientSMID"/>
                    </clientSMID>
                    <clientSM>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/ClientSM"/>
                    </clientSM>
                    <personalManager>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/PersonalManager"/>
                    </personalManager>
                    <trademark>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/Trademark"/>
                    </trademark>
                    <clientShortName>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/ClientShortName"/>
                    </clientShortName>
                    <inn>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/inn"/>
                    </inn>
                    <legalAddressId>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/LegalAddressId"/>
                    </legalAddressId>
                    <legalAddressName>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/LegalAddressName"/>
                    </legalAddressName>
                    <contactAddressId>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/ContactAddressId"/>
                    </contactAddressId>
                    <contactAddressName>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/ContactAddressName"/>
                    </contactAddressName>
                    <www>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/www"/>
                    </www>
                    <clientDateReg>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/ClientDateReg"/>
                    </clientDateReg>
                    <okvedCodeID>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/OKVEDCodeID"/>
                    </okvedCodeID>
                    <okvedCode>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/OKVEDCode"/>
                    </okvedCode>
                    <okvedCodeName>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/OKVEDCodeName"/>
                    </okvedCodeName>
                    <kpp>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/kpp"/>
                    </kpp>
                    <ogrn>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/ogrn"/>
                    </ogrn>
                    <okpo>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/okpo"/>
                    </okpo>
                    <createDate>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/CreateDate"/>
                    </createDate>
                    <createUser>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/CreateUser"/>
                    </createUser>
                    <createrID>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/CreaterID"/>
                    </createrID>
                    <contactID>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/ContactID"/>
                    </contactID>
                    <contactName>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/ContactName"/>
                    </contactName>
                    <contactFirstName>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/ContactFirstName"/>
                    </contactFirstName>
                    <contactLastName>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/ContactLastName"/>
                    </contactLastName>
                    <contactMiddleName>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/ContactMiddleName"/>
                    </contactMiddleName>
                    <contactPhone>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/ContactPhone"/>
                    </contactPhone>
                    <xsl:if test="$Parse-XML/Resultsets/ResultSet1/Record1/ContactPhone2">
                        <contactPhone2>
                            <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/ContactPhone2"/>
                        </contactPhone2>
                    </xsl:if>
                    <contactEmail>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/ContactEmail"/>
                    </contactEmail>
                    <companyGroupID>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/companyGroupID"/>
                    </companyGroupID>
                    <companyGroupName>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/companyGroupName"/>
                    </companyGroupName>
                    <sparkLiquidationDate>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/SPARKLiquidationDate"/>
                    </sparkLiquidationDate>
                    <sparkCauseLiquidation>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/SPARKCauseLiquidation"/>
                    </sparkCauseLiquidation>
                    <operatorConnect>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/OperatorConnect"/>
                    </operatorConnect>
                    <carrierTypeId>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/CarrierTypeId"/>
                    </carrierTypeId>
                    <carrierTypeName>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/CarrierTypeName"/>
                    </carrierTypeName>
                    <clientEditable>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/ClientEditable"/>
                    </clientEditable>
                    <contractCount>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/ContractCount"/>
                    </contractCount>
                    <clientManager>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/ClientManager"/>
                    </clientManager>
                    <underControl>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/UnderControl"/>
                    </underControl>
                    <sparkIsActive>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/SPARKIsActive"/>
                    </sparkIsActive>
                    <sparkStatusDate>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/SPARKStatusDate"/>
                    </sparkStatusDate>
                    <sparkStatus>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/SPARKStatus"/>
                    </sparkStatus>
                    <clientFirstName>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/ClientFirstName"/>
                    </clientFirstName>
                    <clientLastName>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/ClientLastName"/>
                    </clientLastName>
                    <clientMiddleName>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/ClientMiddleName"/>
                    </clientMiddleName>
                    <legalAddressReadyForEdo>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/legalAddressReadyForEdo"/>
                    </legalAddressReadyForEdo>
                    <inCollection>
                        <xsl:value-of select="$Parse-XML/Resultsets/ResultSet1/Record1/InCollection"/>
                    </inCollection>
                </inputParams>
            </ns:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Get Client">
        <pd:type>com.tibco.plugin.jdbc.JDBCCallActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCCallActivity</pd:resourceType>
        <pd:x>209</pd:x>
        <pd:y>164</pd:y>
        <config>
            <timeout>%%Timeout%%</timeout>
            <maxRows>100</maxRows>
            <emptyStrAsNil>false</emptyStrAsNil>
            <jdbcSharedConfig>/Connection/MSSQL Connection (SF).sharedjdbc</jdbcSharedConfig>
            <ProcedureName>Client_GetRecord;1</ProcedureName>
            <useSchema>false</useSchema>
            <schema>%%Schema%%</schema>
            <parameterTypes>
                <parameter>
                    <colName>@RETURN_VALUE</colName>
                    <colType>5</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
                <parameter>
                    <colName>@ID</colName>
                    <colType>1</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
                <parameter>
                    <colName>@adLogin</colName>
                    <colType>1</colType>
                    <dataType>12</dataType>
                    <typeName>varchar</typeName>
                </parameter>
                <parameter>
                    <colName>@opResult</colName>
                    <colType>2</colType>
                    <dataType>4</dataType>
                    <typeName>int</typeName>
                </parameter>
                <parameter>
                    <colName>@opErrorText</colName>
                    <colType>2</colType>
                    <dataType>12</dataType>
                    <typeName>varchar</typeName>
                </parameter>
            </parameterTypes>
        </config>
        <pd:inputBindings>
            <inputs>
                <inputSet>
                    <ID>
                        <xsl:value-of select="$Start/inputParams/clientID"/>
                    </ID>
                    <adLogin>
                        <xsl:value-of select="$Start/inputParams/adLogin"/>
                    </adLogin>
                    <opResult>
                        <xsl:value-of select="0"/>
                    </opResult>
                    <opErrorText>
                        <xsl:value-of select="&quot;&quot;"/>
                    </opErrorText>
                </inputSet>
            </inputs>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse XML">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>370</pd:x>
        <pd:y>166</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>false</validateOutput>
            <term>
                <xsd:element name="Resultsets">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="UpdateCount" type="xsd:int"/>
                            <xsd:element name="ResultSet1">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="Record1">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="ClientID" type="xsd:long"/>
                                                    <xsd:element name="ClientType" type="xsd:int"/>
                                                    <xsd:element name="ClientTypeName" type="xsd:string"/>
                                                    <xsd:element name="ClientName" type="xsd:string"/>
                                                    <xsd:element name="SegmentID" type="xsd:long"/>
                                                    <xsd:element name="SegmentName" type="xsd:string"/>
                                                    <xsd:element name="OfficialStatus" type="xsd:int"/>
                                                    <xsd:element name="OfficialStatusName" type="xsd:string"/>
                                                    <xsd:element name="ClientCharacterCode" type="xsd:string"/>
                                                    <xsd:element name="ClientCharacterName" type="xsd:string"/>
                                                    <xsd:element name="MainBranchCode" type="xsd:string"/>
                                                    <xsd:element name="MainBranchName" type="xsd:string"/>
                                                    <xsd:element name="BranchCode" type="xsd:string"/>
                                                    <xsd:element name="BranchName" type="xsd:string"/>
                                                    <xsd:element name="InfSourceCode" type="xsd:string"/>
                                                    <xsd:element name="InfSourceName" type="xsd:string"/>
                                                    <xsd:element name="OrgFormID" type="xsd:long"/>
                                                    <xsd:element name="OrgFormName" type="xsd:string"/>
                                                    <xsd:element name="ClientSMID" type="xsd:long"/>
                                                    <xsd:element name="ClientSM" type="xsd:string"/>
                                                    <xsd:element name="PersonalManager" type="xsd:string"/>
                                                    <xsd:element name="Trademark" type="xsd:string"/>
                                                    <xsd:element name="ClientShortName" type="xsd:string"/>
                                                    <xsd:element name="inn" type="xsd:string"/>
                                                    <xsd:element name="LegalAddressId" type="xsd:int"/>
                                                    <xsd:element name="LegalAddressName" type="xsd:string"/>
                                                    <xsd:element name="ContactAddressId" type="xsd:int"/>
                                                    <xsd:element name="ContactAddressName" type="xsd:string"/>
                                                    <xsd:element name="www" type="xsd:string"/>
                                                    <xsd:element name="ClientDateReg" type="xsd:dateTime"/>
                                                    <xsd:element name="OKVEDCodeID" type="xsd:long"/>
                                                    <xsd:element name="OKVEDCode" type="xsd:string"/>
                                                    <xsd:element name="OKVEDCodeName" type="xsd:string"/>
                                                    <xsd:element name="kpp" type="xsd:string"/>
                                                    <xsd:element name="ogrn" type="xsd:string"/>
                                                    <xsd:element name="okpo" type="xsd:string"/>
                                                    <xsd:element name="CreateDate" type="xsd:dateTime"/>
                                                    <xsd:element name="CreateUser" type="xsd:string"/>
                                                    <xsd:element name="CreaterID" type="xsd:long"/>
                                                    <xsd:element name="ContactID" type="xsd:int"/>
                                                    <xsd:element name="ContactName" type="xsd:string"/>
                                                    <xsd:element name="ContactFirstName" type="xsd:string"/>
                                                    <xsd:element name="ContactLastName" type="xsd:string"/>
                                                    <xsd:element name="ContactMiddleName" type="xsd:string"/>
                                                    <xsd:element name="ContactPhone" type="xsd:string"/>
                                                    <xsd:element name="ContactPhone2" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="ContactEmail" type="xsd:string"/>
                                                    <xsd:element name="companyGroupID" type="xsd:long"/>
                                                    <xsd:element name="companyGroupName" type="xsd:string"/>
                                                    <xsd:element name="SPARKLiquidationDate" type="xsd:date"/>
                                                    <xsd:element name="SPARKCauseLiquidation" type="xsd:string"/>
                                                    <xsd:element name="OperatorConnect" type="xsd:int"/>
                                                    <xsd:element name="CarrierTypeId" type="xsd:int"/>
                                                    <xsd:element name="CarrierTypeName" type="xsd:string"/>
                                                    <xsd:element name="ClientEditable" type="xsd:int"/>
                                                    <xsd:element name="ContractCount" type="xsd:int"/>
                                                    <xsd:element name="ClientManager" type="xsd:string"/>
                                                    <xsd:element name="UnderControl" type="xsd:int"/>
                                                    <xsd:element name="SPARKIsActive" type="xsd:int"/>
                                                    <xsd:element name="SPARKStatusDate" type="xsd:date"/>
                                                    <xsd:element name="SPARKStatus" type="xsd:string"/>
                                                    <xsd:element name="ClientFirstName" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="ClientLastName" type="xsd:string"/>
                                                    <xsd:element name="ClientMiddleName" type="xsd:string"/>
                                                    <xsd:element name="legalAddressReadyForEdo" type="xsd:int"/>
                                                    <xsd:element name="InCollection" type="xsd:boolean"/>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </term>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Get-Client/resultSet/UnresolvedResultsets"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>367</pd:x>
        <pd:y>68</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Render error JSON">
        <pd:type>com.tibco.plugin.json.activities.JSONRenderActivity</pd:type>
        <pd:resourceType>ae.activities.JSONRenderActivity</pd:resourceType>
        <pd:x>580</pd:x>
        <pd:y>71</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <removeRootElementForInput>true</removeRootElementForInput>
            <ActivityInputEditor>
                <xsd:element name="inputParams">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="opResult" type="xsd:int"/>
                            <xsd:element name="opErrorText" type="xsd:string"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </ActivityInputEditor>
        </config>
        <pd:inputBindings>
            <ns:ActivityInputClass>
                <inputParams>
                    <opResult>
                        <xsl:value-of select="2"/>
                    </opResult>
                    <opErrorText>
                        <xsl:value-of select="$Catch/exceptiondata/*"/>
                    </opErrorText>
                </inputParams>
            </ns:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Render JSON</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Get Client</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Get Client</pd:from>
        <pd:to>Parse XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>Render JSON</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>Render error JSON</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Render error JSON</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>