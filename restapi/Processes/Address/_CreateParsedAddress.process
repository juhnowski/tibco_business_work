<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://www.tibco.com/namespaces/tnt/plugins/json" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx2="http://tempuri.org/" xmlns:pfx="http://ofmservices.org/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xsd:import namespace="http://tempuri.org/" schemaLocation="/Connection/Address WSDL.wsdl"/>
    <wsdl:import namespace="http://tempuri.org/" location="/Connection/Address WSDL.wsdl"/>
    <wsdl:import namespace="http://ofmservices.org/"/>
    <pd:name>Processes/Address/_CreateParsedAddress.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="inputParams">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="adLogin" type="xsd:string"/>
                    <xsd:element name="inputJSON" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>80</pd:startX>
    <pd:startY>67</pd:startY>
    <pd:returnBindings>
        <JSONoutput>
            <xsl:value-of select="if (count($Catch/exceptiondata)>0) then $Render-error-JSON/ns:ActivityOutputClass/jsonString  else $Render-JSON/ns:ActivityOutputClass/jsonString"/>
        </JSONoutput>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="JSONoutput" type="xsd:string"/>
    </pd:endType>
    <pd:endX>618</pd:endX>
    <pd:endY>66</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1521575913877</pd:targetNamespace>
    <pd:activity name="Render JSON">
        <pd:type>com.tibco.plugin.json.activities.JSONRenderActivity</pd:type>
        <pd:resourceType>ae.activities.JSONRenderActivity</pd:resourceType>
        <pd:x>617</pd:x>
        <pd:y>186</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <removeRootElementForInput>true</removeRootElementForInput>
            <ActivityInputEditor>
                <xsd:element name="inputParams">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="recordId" type="xsd:long"/>
                            <xsd:element name="opResult" type="xsd:int"/>
                            <xsd:element name="opErrorText" type="xsd:string"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </ActivityInputEditor>
        </config>
        <pd:inputBindings>
            <ns:ActivityInputClass>
                <inputParams>
                    <recordId>
                        <xsl:value-of select="$Address-CreateUpdateDelete/resultSet/outputSet/recordId"/>
                    </recordId>
                    <opResult>
                        <xsl:value-of select="$Address-CreateUpdateDelete/resultSet/outputSet/opResult"/>
                    </opResult>
                    <opErrorText>
                        <xsl:value-of select="$Address-CreateUpdateDelete/resultSet/outputSet/opErrorText"/>
                    </opErrorText>
                </inputParams>
            </ns:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>377</pd:x>
        <pd:y>67</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Render error JSON">
        <pd:type>com.tibco.plugin.json.activities.JSONRenderActivity</pd:type>
        <pd:resourceType>ae.activities.JSONRenderActivity</pd:resourceType>
        <pd:x>506</pd:x>
        <pd:y>66</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <removeRootElementForInput>true</removeRootElementForInput>
            <ActivityInputEditor>
                <xsd:element name="inputParams">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="opResult" type="xsd:int"/>
                            <xsd:element name="opErrorText" type="xsd:string"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </ActivityInputEditor>
        </config>
        <pd:inputBindings>
            <ns:ActivityInputClass>
                <inputParams>
                    <opResult>
                        <xsl:value-of select="2"/>
                    </opResult>
                    <opErrorText>
                        <xsl:value-of select="$Catch/exceptiondata/*"/>
                    </opErrorText>
                </inputParams>
            </ns:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="Group">
        <pd:type>com.tibco.pe.core.TransactionGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>379</pd:x>
        <pd:y>99</pd:y>
        <pd:width>187</pd:width>
        <pd:height>155</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>transactionGroup</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:transactionType>JDBCTransaction</pd:transactionType>
            <pd:includeCheckpoint>false</pd:includeCheckpoint>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Address CreateUpdateDelete</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Address CreateUpdateDelete</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="Address CreateUpdateDelete">
            <pd:type>com.tibco.plugin.jdbc.JDBCCallActivity</pd:type>
            <pd:resourceType>ae.activities.JDBCCallActivity</pd:resourceType>
            <pd:x>471</pd:x>
            <pd:y>190</pd:y>
            <config>
                <timeout>%%Timeout%%</timeout>
                <maxRows>100</maxRows>
                <emptyStrAsNil>false</emptyStrAsNil>
                <jdbcSharedConfig>/Connection/MSSQL Connection (SF).sharedjdbc</jdbcSharedConfig>
                <ProcedureName>Address_CreateUpdateDelete;1</ProcedureName>
                <useSchema>false</useSchema>
                <schema>%%Schema%%</schema>
                <parameterTypes>
                    <parameter>
                        <colName>@RETURN_VALUE</colName>
                        <colType>5</colType>
                        <dataType>4</dataType>
                        <typeName>int</typeName>
                    </parameter>
                    <parameter>
                        <colName>@opType</colName>
                        <colType>1</colType>
                        <dataType>-6</dataType>
                        <typeName>tinyint</typeName>
                    </parameter>
                    <parameter>
                        <colName>@adLogin</colName>
                        <colType>1</colType>
                        <dataType>12</dataType>
                        <typeName>varchar</typeName>
                    </parameter>
                    <parameter>
                        <colName>@clientID</colName>
                        <colType>1</colType>
                        <dataType>4</dataType>
                        <typeName>int</typeName>
                    </parameter>
                    <parameter>
                        <colName>@BCID</colName>
                        <colType>1</colType>
                        <dataType>4</dataType>
                        <typeName>int</typeName>
                    </parameter>
                    <parameter>
                        <colName>@addressType</colName>
                        <colType>1</colType>
                        <dataType>4</dataType>
                        <typeName>int</typeName>
                    </parameter>
                    <parameter>
                        <colName>@addressParams</colName>
                        <colType>1</colType>
                        <dataType>12</dataType>
                        <typeName>varchar</typeName>
                    </parameter>
                    <parameter>
                        <colName>@recordId</colName>
                        <colType>2</colType>
                        <dataType>4</dataType>
                        <typeName>int</typeName>
                    </parameter>
                    <parameter>
                        <colName>@opResult</colName>
                        <colType>2</colType>
                        <dataType>4</dataType>
                        <typeName>int</typeName>
                    </parameter>
                    <parameter>
                        <colName>@opErrorText</colName>
                        <colType>2</colType>
                        <dataType>12</dataType>
                        <typeName>varchar</typeName>
                    </parameter>
                </parameterTypes>
            </config>
            <pd:inputBindings>
                <inputs>
                    <inputSet>
                        <opType>
                            <xsl:value-of select="1"/>
                        </opType>
                        <adLogin>
                            <xsl:value-of select="$Start/inputParams/adLogin"/>
                        </adLogin>
                        <clientID>
                            <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Address/clientID"/>
                        </clientID>
                        <BCID xsi:nil="true"/>
                        <addressType>
                            <xsl:choose>
                                <xsl:when test="exists($Parse-JSON/ns:ActivityOutputClass/Address/addressType)">
                                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Address/addressType"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </addressType>
                        <addressParams>
                            <xsl:value-of select="substring-after($Render-XML/xmlString,'&lt;?xml version=&quot;1.0&quot; encoding=&quot;windows-1251&quot;?>')"/>
                        </addressParams>
                        <recordId>
                            <xsl:value-of select="0"/>
                        </recordId>
                        <opResult>
                            <xsl:value-of select="0"/>
                        </opResult>
                        <opErrorText>
                            <xsl:value-of select="&quot;&quot;"/>
                        </opErrorText>
                    </inputSet>
                </inputs>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="SOAPRequestReply">
        <pd:type>com.tibco.plugin.soap.SOAPSendReceiveActivity</pd:type>
        <pd:resourceType>ae.activities.SOAPSendReceiveUI</pd:resourceType>
        <pd:x>186</pd:x>
        <pd:y>184</pd:y>
        <config>
            <timeout>0</timeout>
            <soapAttachmentStyle>SwA</soapAttachmentStyle>
            <timeoutType>Seconds</timeoutType>
            <service>pfx2:ParsingService</service>
            <servicePort>ParsingServiceSoap</servicePort>
            <operation>ParseAddress</operation>
            <soapAction>http://tempuri.org/ParseAddress</soapAction>
            <endpointURL>%%AddressParseSoap%%</endpointURL>
            <authScheme>NONE</authScheme>
        </config>
        <pd:inputBindings>
            <inputMessage>
                <pfx2:ParseAddress>
                    <pfx2:address>
                        <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/Address/addressString"/>
                    </pfx2:address>
                </pfx2:ParseAddress>
            </inputMessage>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse JSON">
        <pd:type>com.tibco.plugin.json.activities.JSONParserActivity</pd:type>
        <pd:resourceType>ae.activities.JSONParserActivity</pd:resourceType>
        <pd:x>83</pd:x>
        <pd:y>184</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <ActivityOutputEditor>
                <xsd:element name="Address">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="clientID" type="xsd:long"/>
                            <xsd:element name="addressType" type="xsd:long" minOccurs="0"/>
                            <xsd:element name="addressString" type="xsd:string"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </ActivityOutputEditor>
        </config>
        <pd:inputBindings>
            <ns:ActivityInputClass>
                <jsonString>
                    <xsl:value-of select="$Start/inputParams/inputJSON"/>
                </jsonString>
            </ns:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Render XML">
        <pd:type>com.tibco.plugin.xml.XMLRendererActivity</pd:type>
        <pd:resourceType>ae.activities.XMLRendererActivity</pd:resourceType>
        <pd:x>296</pd:x>
        <pd:y>184</pd:y>
        <config>
            <renderAsText>text</renderAsText>
            <validateInput>false</validateInput>
            <textEncoding>windows-1251</textEncoding>
            <term>
                <xsd:element name="ParseAddressResult">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="AreaId" type="xsd:int"/>
                            <xsd:element name="Area" type="xsd:string"/>
                            <xsd:element name="AreaTypeId" type="xsd:int"/>
                            <xsd:element name="AreaType" type="xsd:string"/>
                            <xsd:element name="ParentAreaId" type="xsd:int"/>
                            <xsd:element name="ParentArea" type="xsd:string"/>
                            <xsd:element name="CityId" type="xsd:int"/>
                            <xsd:element name="City" type="xsd:string"/>
                            <xsd:element name="CityTypeId" type="xsd:int"/>
                            <xsd:element name="CityType" type="xsd:string"/>
                            <xsd:element name="StreetId" type="xsd:int"/>
                            <xsd:element name="StreetWrong" type="xsd:string"/>
                            <xsd:element name="Street" type="xsd:string"/>
                            <xsd:element name="StreetTypeId" type="xsd:int"/>
                            <xsd:element name="StreetType" type="xsd:string"/>
                            <xsd:element name="BuildingId" type="xsd:int"/>
                            <xsd:element name="Building" type="xsd:string"/>
                            <xsd:element name="Number1" type="xsd:string"/>
                            <xsd:element name="Number1Type" type="xsd:string"/>
                            <xsd:element name="Number1TypeId" type="xsd:int"/>
                            <xsd:element name="Number2" type="xsd:string"/>
                            <xsd:element name="Number2Type" type="xsd:string"/>
                            <xsd:element name="Number2TypeId" type="xsd:int"/>
                            <xsd:element name="Number3" type="xsd:string"/>
                            <xsd:element name="Number3Type" type="xsd:string"/>
                            <xsd:element name="Number3TypeId" type="xsd:int"/>
                            <xsd:element name="Zip" type="xsd:string"/>
                            <xsd:element name="Tail" type="xsd:string"/>
                            <xsd:element name="Latitude" type="xsd:double"/>
                            <xsd:element name="Longtitude" type="xsd:double"/>
                            <xsd:element name="IsExactBuilding" type="xsd:int"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </term>
        </config>
        <pd:inputBindings>
            <ParseAddressResult>
                <AreaId>
                    <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx2:ParseAddressResponse/pfx2:ParseAddressResult/pfx2:AreaId"/>
                </AreaId>
                <Area>
                    <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx2:ParseAddressResponse/pfx2:ParseAddressResult/pfx2:Area"/>
                </Area>
                <AreaTypeId>
                    <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx2:ParseAddressResponse/pfx2:ParseAddressResult/pfx2:AreaTypeId"/>
                </AreaTypeId>
                <AreaType>
                    <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx2:ParseAddressResponse/pfx2:ParseAddressResult/pfx2:AreaType"/>
                </AreaType>
                <ParentAreaId>
                    <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx2:ParseAddressResponse/pfx2:ParseAddressResult/pfx2:ParentAreaId"/>
                </ParentAreaId>
                <ParentArea>
                    <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx2:ParseAddressResponse/pfx2:ParseAddressResult/pfx2:ParentArea"/>
                </ParentArea>
                <CityId>
                    <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx2:ParseAddressResponse/pfx2:ParseAddressResult/pfx2:CityId"/>
                </CityId>
                <City>
                    <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx2:ParseAddressResponse/pfx2:ParseAddressResult/pfx2:City"/>
                </City>
                <CityTypeId>
                    <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx2:ParseAddressResponse/pfx2:ParseAddressResult/pfx2:CityTypeId"/>
                </CityTypeId>
                <CityType>
                    <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx2:ParseAddressResponse/pfx2:ParseAddressResult/pfx2:CityType"/>
                </CityType>
                <StreetId>
                    <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx2:ParseAddressResponse/pfx2:ParseAddressResult/pfx2:StreetId"/>
                </StreetId>
                <StreetWrong>
                    <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx2:ParseAddressResponse/pfx2:ParseAddressResult/pfx2:StreetWrong"/>
                </StreetWrong>
                <Street>
                    <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx2:ParseAddressResponse/pfx2:ParseAddressResult/pfx2:Street"/>
                </Street>
                <StreetTypeId>
                    <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx2:ParseAddressResponse/pfx2:ParseAddressResult/pfx2:StreetTypeId"/>
                </StreetTypeId>
                <StreetType>
                    <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx2:ParseAddressResponse/pfx2:ParseAddressResult/pfx2:StreetType"/>
                </StreetType>
                <BuildingId>
                    <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx2:ParseAddressResponse/pfx2:ParseAddressResult/pfx2:BuildingId"/>
                </BuildingId>
                <Building>
                    <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx2:ParseAddressResponse/pfx2:ParseAddressResult/pfx2:Building"/>
                </Building>
                <Number1>
                    <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx2:ParseAddressResponse/pfx2:ParseAddressResult/pfx2:Number1"/>
                </Number1>
                <Number1Type>
                    <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx2:ParseAddressResponse/pfx2:ParseAddressResult/pfx2:Number1Type"/>
                </Number1Type>
                <Number1TypeId>
                    <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx2:ParseAddressResponse/pfx2:ParseAddressResult/pfx2:Number1TypeId"/>
                </Number1TypeId>
                <Number2>
                    <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx2:ParseAddressResponse/pfx2:ParseAddressResult/pfx2:Number2"/>
                </Number2>
                <Number2Type>
                    <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx2:ParseAddressResponse/pfx2:ParseAddressResult/pfx2:Number2Type"/>
                </Number2Type>
                <Number2TypeId>
                    <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx2:ParseAddressResponse/pfx2:ParseAddressResult/pfx2:Number2TypeId"/>
                </Number2TypeId>
                <Number3>
                    <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx2:ParseAddressResponse/pfx2:ParseAddressResult/pfx2:Number3"/>
                </Number3>
                <Number3Type>
                    <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx2:ParseAddressResponse/pfx2:ParseAddressResult/pfx2:Number3Type"/>
                </Number3Type>
                <Number3TypeId>
                    <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx2:ParseAddressResponse/pfx2:ParseAddressResult/pfx2:Number3TypeId"/>
                </Number3TypeId>
                <Zip>
                    <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx2:ParseAddressResponse/pfx2:ParseAddressResult/pfx2:Zip"/>
                </Zip>
                <Tail>
                    <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx2:ParseAddressResponse/pfx2:ParseAddressResult/pfx2:Tail"/>
                </Tail>
                <Latitude>
                    <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx2:ParseAddressResponse/pfx2:ParseAddressResult/pfx2:Latitude"/>
                </Latitude>
                <Longtitude>
                    <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx2:ParseAddressResponse/pfx2:ParseAddressResult/pfx2:Longtitude"/>
                </Longtitude>
                <IsExactBuilding>
                    <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx2:ParseAddressResponse/pfx2:ParseAddressResult/pfx2:IsExactBuilding"/>
                </IsExactBuilding>
            </ParseAddressResult>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Render JSON</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>Render error JSON</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Render error JSON</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>Render JSON</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SOAPRequestReply</pd:from>
        <pd:to>Render XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Parse JSON</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse JSON</pd:from>
        <pd:to>SOAPRequestReply</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Render XML</pd:from>
        <pd:to>Group</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>